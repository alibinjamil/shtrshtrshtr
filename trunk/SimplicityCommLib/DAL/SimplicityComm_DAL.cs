#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimplicityCommLib
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class SimplicityCommDB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertUserProduct(UserProduct instance);
    partial void UpdateUserProduct(UserProduct instance);
    partial void DeleteUserProduct(UserProduct instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public SimplicityCommDB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimplicityCommDB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimplicityCommDB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimplicityCommDB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<EmailQueue> EmailQueues
		{
			get
			{
				return this.GetTable<EmailQueue>();
			}
		}
		
		public System.Data.Linq.Table<EmailTemplate> EmailTemplates
		{
			get
			{
				return this.GetTable<EmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<UserProduct> UserProducts
		{
			get
			{
				return this.GetTable<UserProduct>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[Function(Name="dbo.AddressInsert")]
		[return: Parameter(DbType="Int")]
		public int AddressInsert(
					[Parameter(Name="Flg_Deleted", DbType="Bit")] System.Nullable<bool> flg_Deleted, 
					[Parameter(Name="CatagoryId", DbType="Int")] System.Nullable<int> catagoryId, 
					[Parameter(Name="TableId", DbType="Int")] System.Nullable<int> tableId, 
					[Parameter(Name="FlgSameAsCustomer", DbType="Bit")] System.Nullable<bool> flgSameAsCustomer, 
					[Parameter(Name="FlgSameAsBilling", DbType="Bit")] System.Nullable<bool> flgSameAsBilling, 
					[Parameter(Name="MultiAddType", DbType="VarChar(10)")] string multiAddType, 
					[Parameter(Name="AddressName", DbType="VarChar(255)")] string addressName, 
					[Parameter(Name="AddressNo", DbType="VarChar(32)")] string addressNo, 
					[Parameter(Name="AddressLine1", DbType="VarChar(60)")] string addressLine1, 
					[Parameter(Name="AddressLine2", DbType="VarChar(60)")] string addressLine2, 
					[Parameter(Name="AddressLine3", DbType="VarChar(60)")] string addressLine3, 
					[Parameter(Name="AddressLine4", DbType="VarChar(60)")] string addressLine4, 
					[Parameter(Name="AddressLine5", DbType="VarChar(60)")] string addressLine5, 
					[Parameter(Name="AddressPostCode", DbType="VarChar(9)")] string addressPostCode, 
					[Parameter(Name="AddressFull", DbType="VarChar(MAX)")] string addressFull, 
					[Parameter(Name="Telephone1", DbType="VarChar(30)")] string telephone1, 
					[Parameter(Name="Telephone2", DbType="VarChar(30)")] string telephone2, 
					[Parameter(Name="Fax", DbType="VarChar(30)")] string fax, 
					[Parameter(Name="CellNumber", DbType="VarChar(30)")] string cellNumber, 
					[Parameter(Name="CreatedBy", DbType="Int")] System.Nullable<int> createdBy, 
					[Parameter(Name="DateCreated", DbType="DateTime")] System.Nullable<System.DateTime> dateCreated, 
					[Parameter(Name="LastAmendedBy", DbType="Int")] System.Nullable<int> lastAmendedBy, 
					[Parameter(Name="DateLastAmended", DbType="DateTime")] System.Nullable<System.DateTime> dateLastAmended, 
					[Parameter(Name="Town", DbType="VarChar(60)")] string town, 
					[Parameter(Name="County", DbType="VarChar(60)")] string county, 
					[Parameter(Name="Country", DbType="VarChar(60)")] string country)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flg_Deleted, catagoryId, tableId, flgSameAsCustomer, flgSameAsBilling, multiAddType, addressName, addressNo, addressLine1, addressLine2, addressLine3, addressLine4, addressLine5, addressPostCode, addressFull, telephone1, telephone2, fax, cellNumber, createdBy, dateCreated, lastAmendedBy, dateLastAmended, town, county, country);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AddressSelectByTableId")]
		public ISingleResult<AddressSelectByTableIdResult> AddressSelectByTableId([Parameter(Name="CatagoryId", DbType="Int")] System.Nullable<int> catagoryId, [Parameter(Name="TableId", DbType="Int")] System.Nullable<int> tableId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), catagoryId, tableId);
			return ((ISingleResult<AddressSelectByTableIdResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.AddressUpdate")]
		public ISingleResult<AddressUpdateResult> AddressUpdate(
					[Parameter(Name="Flg_Deleted", DbType="Bit")] System.Nullable<bool> flg_Deleted, 
					[Parameter(Name="CatagoryId", DbType="Int")] System.Nullable<int> catagoryId, 
					[Parameter(Name="TableId", DbType="Int")] System.Nullable<int> tableId, 
					[Parameter(Name="FlgSameAsCustomer", DbType="Bit")] System.Nullable<bool> flgSameAsCustomer, 
					[Parameter(Name="FlgSameAsBilling", DbType="Bit")] System.Nullable<bool> flgSameAsBilling, 
					[Parameter(Name="MultiAddType", DbType="VarChar(10)")] string multiAddType, 
					[Parameter(Name="AddressName", DbType="VarChar(255)")] string addressName, 
					[Parameter(Name="AddressNo", DbType="VarChar(32)")] string addressNo, 
					[Parameter(Name="AddressLine1", DbType="VarChar(60)")] string addressLine1, 
					[Parameter(Name="AddressLine2", DbType="VarChar(60)")] string addressLine2, 
					[Parameter(Name="AddressLine3", DbType="VarChar(60)")] string addressLine3, 
					[Parameter(Name="AddressLine4", DbType="VarChar(60)")] string addressLine4, 
					[Parameter(Name="AddressLine5", DbType="VarChar(60)")] string addressLine5, 
					[Parameter(Name="AddressPostCode", DbType="VarChar(9)")] string addressPostCode, 
					[Parameter(Name="AddressFull", DbType="VarChar(MAX)")] string addressFull, 
					[Parameter(Name="Telephone1", DbType="VarChar(30)")] string telephone1, 
					[Parameter(Name="Telephone2", DbType="VarChar(30)")] string telephone2, 
					[Parameter(Name="Fax", DbType="VarChar(30)")] string fax, 
					[Parameter(Name="CellNumber", DbType="VarChar(30)")] string cellNumber, 
					[Parameter(Name="CreatedBy", DbType="Int")] System.Nullable<int> createdBy, 
					[Parameter(Name="DateCreated", DbType="DateTime")] System.Nullable<System.DateTime> dateCreated, 
					[Parameter(Name="LastAmendedBy", DbType="Int")] System.Nullable<int> lastAmendedBy, 
					[Parameter(Name="DateLastAmended", DbType="DateTime")] System.Nullable<System.DateTime> dateLastAmended, 
					[Parameter(Name="Town", DbType="VarChar(60)")] string town, 
					[Parameter(Name="County", DbType="VarChar(60)")] string county, 
					[Parameter(Name="Country", DbType="VarChar(60)")] string country, 
					[Parameter(Name="Original_AddressId", DbType="Int")] System.Nullable<int> original_AddressId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flg_Deleted, catagoryId, tableId, flgSameAsCustomer, flgSameAsBilling, multiAddType, addressName, addressNo, addressLine1, addressLine2, addressLine3, addressLine4, addressLine5, addressPostCode, addressFull, telephone1, telephone2, fax, cellNumber, createdBy, dateCreated, lastAmendedBy, dateLastAmended, town, county, country, original_AddressId);
			return ((ISingleResult<AddressUpdateResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.fn_diagramobjects", IsComposable=true)]
		[return: Parameter(DbType="Int")]
		public System.Nullable<int> Fn_diagramobjects()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[Function(Name="dbo.ProductInsert")]
		[return: Parameter(DbType="Int")]
		public int ProductInsert([Parameter(Name="Name", DbType="VarChar(100)")] string name, [Parameter(Name="Description", DbType="VarChar(100)")] string description, [Parameter(Name="ShortName", DbType="VarChar(20)")] string shortName, [Parameter(Name="TermsURL", DbType="VarChar(200)")] string termsURL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, description, shortName, termsURL);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ProductSelect")]
		public ISingleResult<ProductSelectResult> ProductSelect()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ProductSelectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.ProductSelectById")]
		public ISingleResult<ProductSelectByIdResult> ProductSelectById([Parameter(Name="ProductId", DbType="Int")] System.Nullable<int> productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId);
			return ((ISingleResult<ProductSelectByIdResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SessionInsert")]
		[return: Parameter(DbType="Int")]
		public int SessionInsert([Parameter(Name="GUID", DbType="VarChar(50)")] string gUID, [Parameter(Name="UserId", DbType="Int")] System.Nullable<int> userId, [Parameter(Name="StartTime", DbType="DateTime")] System.Nullable<System.DateTime> startTime, [Parameter(Name="EndTime", DbType="DateTime")] System.Nullable<System.DateTime> endTime, [Parameter(Name="IP", DbType="VarChar(50)")] string iP)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID, userId, startTime, endTime, iP);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SessionSelectByGUID")]
		public ISingleResult<SessionSelectByGUIDResult> SessionSelectByGUID([Parameter(Name="GUID", DbType="VarChar(50)")] string gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gUID);
			return ((ISingleResult<SessionSelectByGUIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SessionSelectByIP")]
		public ISingleResult<SessionSelectByIPResult> SessionSelectByIP([Parameter(Name="IP", DbType="VarChar(50)")] string iP)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iP);
			return ((ISingleResult<SessionSelectByIPResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.SessionSelectByUserId")]
		public ISingleResult<SessionSelectByUserIdResult> SessionSelectByUserId([Parameter(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<SessionSelectByUserIdResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_alterdiagram")]
		[return: Parameter(DbType="Int")]
		public int Sp_alterdiagram([Parameter(DbType="NVarChar(128)")] string diagramname, [Parameter(DbType="Int")] System.Nullable<int> owner_id, [Parameter(DbType="Int")] System.Nullable<int> version, [Parameter(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_creatediagram")]
		[return: Parameter(DbType="Int")]
		public int Sp_creatediagram([Parameter(DbType="NVarChar(128)")] string diagramname, [Parameter(DbType="Int")] System.Nullable<int> owner_id, [Parameter(DbType="Int")] System.Nullable<int> version, [Parameter(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_dropdiagram")]
		[return: Parameter(DbType="Int")]
		public int Sp_dropdiagram([Parameter(DbType="NVarChar(128)")] string diagramname, [Parameter(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_helpdiagramdefinition")]
		public ISingleResult<Sp_helpdiagramdefinitionResult> Sp_helpdiagramdefinition([Parameter(DbType="NVarChar(128)")] string diagramname, [Parameter(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((ISingleResult<Sp_helpdiagramdefinitionResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_helpdiagrams")]
		public ISingleResult<Sp_helpdiagramsResult> Sp_helpdiagrams([Parameter(DbType="NVarChar(128)")] string diagramname, [Parameter(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((ISingleResult<Sp_helpdiagramsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_renamediagram")]
		[return: Parameter(DbType="Int")]
		public int Sp_renamediagram([Parameter(DbType="NVarChar(128)")] string diagramname, [Parameter(DbType="Int")] System.Nullable<int> owner_id, [Parameter(DbType="NVarChar(128)")] string new_diagramname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, new_diagramname);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UpdateSession")]
		[return: Parameter(DbType="Int")]
		public int UpdateSession([Parameter(Name="StartTime", DbType="DateTime")] System.Nullable<System.DateTime> startTime, [Parameter(Name="EndTime", DbType="DateTime")] System.Nullable<System.DateTime> endTime, [Parameter(Name="GUID", DbType="VarChar(50)")] string gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startTime, endTime, gUID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UserInsert")]
		public ISingleResult<UserInsertResult> UserInsert(
					[Parameter(Name="FlgReceiveMails", DbType="Bit")] System.Nullable<bool> flgReceiveMails, 
					[Parameter(Name="FlgDeleted", DbType="Bit")] System.Nullable<bool> flgDeleted, 
					[Parameter(Name="FlgEntityOnHold", DbType="Bit")] System.Nullable<bool> flgEntityOnHold, 
					[Parameter(Name="UserApprovedStatus", DbType="Int")] System.Nullable<int> userApprovedStatus, 
					[Parameter(Name="UserPymtType", DbType="Int")] System.Nullable<int> userPymtType, 
					[Parameter(Name="FullName", DbType="VarChar(60)")] string fullName, 
					[Parameter(Name="Title", DbType="VarChar(7)")] string title, 
					[Parameter(Name="Initials", DbType="VarChar(3)")] string initials, 
					[Parameter(Name="NameForename", DbType="VarChar(60)")] string nameForename, 
					[Parameter(Name="NameSurname", DbType="VarChar(60)")] string nameSurname, 
					[Parameter(Name="NameJobTitle", DbType="VarChar(255)")] string nameJobTitle, 
					[Parameter(Name="Email", DbType="VarChar(60)")] string email, 
					[Parameter(Name="Password", DbType="VarChar(50)")] string password, 
					[Parameter(DbType="TinyInt")] System.Nullable<byte> enable_reminder_question_id, 
					[Parameter(Name="EnableReminderCustomQuestion", DbType="VarChar(50)")] string enableReminderCustomQuestion, 
					[Parameter(Name="ReminderQuestionAnswer", DbType="VarChar(50)")] string reminderQuestionAnswer, 
					[Parameter(Name="FlgVerified", DbType="Bit")] System.Nullable<bool> flgVerified, 
					[Parameter(Name="FlgEnabled", DbType="Bit")] System.Nullable<bool> flgEnabled, 
					[Parameter(Name="LoginAttempts", DbType="Int")] System.Nullable<int> loginAttempts, 
					[Parameter(Name="FlgLocked", DbType="Bit")] System.Nullable<bool> flgLocked, 
					[Parameter(Name="LockedReason", DbType="VarChar(255)")] string lockedReason, 
					[Parameter(Name="CreatedBy", DbType="Int")] System.Nullable<int> createdBy, 
					[Parameter(Name="DateCreated", DbType="DateTime")] System.Nullable<System.DateTime> dateCreated, 
					[Parameter(Name="LastAmendedBy", DbType="Int")] System.Nullable<int> lastAmendedBy, 
					[Parameter(Name="DateLastAmended", DbType="DateTime")] System.Nullable<System.DateTime> dateLastAmended, 
					[Parameter(Name="Role", DbType="VarChar(50)")] string role)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flgReceiveMails, flgDeleted, flgEntityOnHold, userApprovedStatus, userPymtType, fullName, title, initials, nameForename, nameSurname, nameJobTitle, email, password, enable_reminder_question_id, enableReminderCustomQuestion, reminderQuestionAnswer, flgVerified, flgEnabled, loginAttempts, flgLocked, lockedReason, createdBy, dateCreated, lastAmendedBy, dateLastAmended, role);
			return ((ISingleResult<UserInsertResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UserSelect")]
		public ISingleResult<UserSelectResult> UserSelect()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<UserSelectResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UserSelectByEmail")]
		public ISingleResult<UserSelectByEmailResult> UserSelectByEmail([Parameter(DbType="VarChar(60)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email);
			return ((ISingleResult<UserSelectByEmailResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UserSelectById")]
		public ISingleResult<UserSelectByIdResult> UserSelectById([Parameter(DbType="Int")] System.Nullable<int> user_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_id);
			return ((ISingleResult<UserSelectByIdResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UserSelectByUID")]
		public ISingleResult<UserSelectByUIDResult> UserSelectByUID([Parameter(DbType="Char(36)")] string uid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uid);
			return ((ISingleResult<UserSelectByUIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.UserUpdatePassword")]
		public ISingleResult<UserUpdatePasswordResult> UserUpdatePassword([Parameter(Name="Pass", DbType="VarChar(50)")] string pass, [Parameter(Name="Original_User_id", DbType="Int")] System.Nullable<int> original_User_id, [Parameter(Name="User_id", DbType="Int")] System.Nullable<int> user_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pass, original_User_id, user_id);
			return ((ISingleResult<UserUpdatePasswordResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.VerifyUser")]
		[return: Parameter(DbType="Int")]
		public int VerifyUser([Parameter(DbType="Int")] System.Nullable<int> user_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_id);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressId;
		
		private bool _Flg_Deleted;
		
		private int _CatagoryId;
		
		private System.Nullable<int> _TableId;
		
		private bool _FlgSameAsCustomer;
		
		private bool _FlgSameAsBilling;
		
		private string _MultiAddType;
		
		private string _AddressName;
		
		private string _AddressNo;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _AddressLine3;
		
		private string _AddressLine4;
		
		private string _AddressLine5;
		
		private string _AddressPostCode;
		
		private string _AddressFull;
		
		private string _Telephone1;
		
		private string _Telephone2;
		
		private string _Fax;
		
		private string _CellNumber;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Town;
		
		private string _County;
		
		private string _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIdChanging(int value);
    partial void OnAddressIdChanged();
    partial void OnFlg_DeletedChanging(bool value);
    partial void OnFlg_DeletedChanged();
    partial void OnCatagoryIdChanging(int value);
    partial void OnCatagoryIdChanged();
    partial void OnTableIdChanging(System.Nullable<int> value);
    partial void OnTableIdChanged();
    partial void OnFlgSameAsCustomerChanging(bool value);
    partial void OnFlgSameAsCustomerChanged();
    partial void OnFlgSameAsBillingChanging(bool value);
    partial void OnFlgSameAsBillingChanged();
    partial void OnMultiAddTypeChanging(string value);
    partial void OnMultiAddTypeChanged();
    partial void OnAddressNameChanging(string value);
    partial void OnAddressNameChanged();
    partial void OnAddressNoChanging(string value);
    partial void OnAddressNoChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnAddressLine3Changing(string value);
    partial void OnAddressLine3Changed();
    partial void OnAddressLine4Changing(string value);
    partial void OnAddressLine4Changed();
    partial void OnAddressLine5Changing(string value);
    partial void OnAddressLine5Changed();
    partial void OnAddressPostCodeChanging(string value);
    partial void OnAddressPostCodeChanged();
    partial void OnAddressFullChanging(string value);
    partial void OnAddressFullChanged();
    partial void OnTelephone1Changing(string value);
    partial void OnTelephone1Changed();
    partial void OnTelephone2Changing(string value);
    partial void OnTelephone2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCellNumberChanging(string value);
    partial void OnCellNumberChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnLastAmendedByChanging(System.Nullable<int> value);
    partial void OnLastAmendedByChanged();
    partial void OnDateLastAmendedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastAmendedChanged();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public Address()
		{
			OnCreated();
		}
		
		[Column(Storage="_AddressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this.OnAddressIdChanging(value);
					this.SendPropertyChanging();
					this._AddressId = value;
					this.SendPropertyChanged("AddressId");
					this.OnAddressIdChanged();
				}
			}
		}
		
		[Column(Storage="_Flg_Deleted", DbType="Bit NOT NULL")]
		public bool Flg_Deleted
		{
			get
			{
				return this._Flg_Deleted;
			}
			set
			{
				if ((this._Flg_Deleted != value))
				{
					this.OnFlg_DeletedChanging(value);
					this.SendPropertyChanging();
					this._Flg_Deleted = value;
					this.SendPropertyChanged("Flg_Deleted");
					this.OnFlg_DeletedChanged();
				}
			}
		}
		
		[Column(Storage="_CatagoryId", DbType="Int NOT NULL")]
		public int CatagoryId
		{
			get
			{
				return this._CatagoryId;
			}
			set
			{
				if ((this._CatagoryId != value))
				{
					this.OnCatagoryIdChanging(value);
					this.SendPropertyChanging();
					this._CatagoryId = value;
					this.SendPropertyChanged("CatagoryId");
					this.OnCatagoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_TableId", DbType="Int")]
		public System.Nullable<int> TableId
		{
			get
			{
				return this._TableId;
			}
			set
			{
				if ((this._TableId != value))
				{
					this.OnTableIdChanging(value);
					this.SendPropertyChanging();
					this._TableId = value;
					this.SendPropertyChanged("TableId");
					this.OnTableIdChanged();
				}
			}
		}
		
		[Column(Storage="_FlgSameAsCustomer", DbType="Bit NOT NULL")]
		public bool FlgSameAsCustomer
		{
			get
			{
				return this._FlgSameAsCustomer;
			}
			set
			{
				if ((this._FlgSameAsCustomer != value))
				{
					this.OnFlgSameAsCustomerChanging(value);
					this.SendPropertyChanging();
					this._FlgSameAsCustomer = value;
					this.SendPropertyChanged("FlgSameAsCustomer");
					this.OnFlgSameAsCustomerChanged();
				}
			}
		}
		
		[Column(Storage="_FlgSameAsBilling", DbType="Bit NOT NULL")]
		public bool FlgSameAsBilling
		{
			get
			{
				return this._FlgSameAsBilling;
			}
			set
			{
				if ((this._FlgSameAsBilling != value))
				{
					this.OnFlgSameAsBillingChanging(value);
					this.SendPropertyChanging();
					this._FlgSameAsBilling = value;
					this.SendPropertyChanged("FlgSameAsBilling");
					this.OnFlgSameAsBillingChanged();
				}
			}
		}
		
		[Column(Storage="_MultiAddType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MultiAddType
		{
			get
			{
				return this._MultiAddType;
			}
			set
			{
				if ((this._MultiAddType != value))
				{
					this.OnMultiAddTypeChanging(value);
					this.SendPropertyChanging();
					this._MultiAddType = value;
					this.SendPropertyChanged("MultiAddType");
					this.OnMultiAddTypeChanged();
				}
			}
		}
		
		[Column(Storage="_AddressName", DbType="VarChar(255)")]
		public string AddressName
		{
			get
			{
				return this._AddressName;
			}
			set
			{
				if ((this._AddressName != value))
				{
					this.OnAddressNameChanging(value);
					this.SendPropertyChanging();
					this._AddressName = value;
					this.SendPropertyChanged("AddressName");
					this.OnAddressNameChanged();
				}
			}
		}
		
		[Column(Storage="_AddressNo", DbType="VarChar(32)")]
		public string AddressNo
		{
			get
			{
				return this._AddressNo;
			}
			set
			{
				if ((this._AddressNo != value))
				{
					this.OnAddressNoChanging(value);
					this.SendPropertyChanging();
					this._AddressNo = value;
					this.SendPropertyChanged("AddressNo");
					this.OnAddressNoChanged();
				}
			}
		}
		
		[Column(Storage="_AddressLine1", DbType="VarChar(60)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[Column(Storage="_AddressLine2", DbType="VarChar(60)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[Column(Storage="_AddressLine3", DbType="VarChar(60)")]
		public string AddressLine3
		{
			get
			{
				return this._AddressLine3;
			}
			set
			{
				if ((this._AddressLine3 != value))
				{
					this.OnAddressLine3Changing(value);
					this.SendPropertyChanging();
					this._AddressLine3 = value;
					this.SendPropertyChanged("AddressLine3");
					this.OnAddressLine3Changed();
				}
			}
		}
		
		[Column(Storage="_AddressLine4", DbType="VarChar(60)")]
		public string AddressLine4
		{
			get
			{
				return this._AddressLine4;
			}
			set
			{
				if ((this._AddressLine4 != value))
				{
					this.OnAddressLine4Changing(value);
					this.SendPropertyChanging();
					this._AddressLine4 = value;
					this.SendPropertyChanged("AddressLine4");
					this.OnAddressLine4Changed();
				}
			}
		}
		
		[Column(Storage="_AddressLine5", DbType="VarChar(60)")]
		public string AddressLine5
		{
			get
			{
				return this._AddressLine5;
			}
			set
			{
				if ((this._AddressLine5 != value))
				{
					this.OnAddressLine5Changing(value);
					this.SendPropertyChanging();
					this._AddressLine5 = value;
					this.SendPropertyChanged("AddressLine5");
					this.OnAddressLine5Changed();
				}
			}
		}
		
		[Column(Storage="_AddressPostCode", DbType="VarChar(9)")]
		public string AddressPostCode
		{
			get
			{
				return this._AddressPostCode;
			}
			set
			{
				if ((this._AddressPostCode != value))
				{
					this.OnAddressPostCodeChanging(value);
					this.SendPropertyChanging();
					this._AddressPostCode = value;
					this.SendPropertyChanged("AddressPostCode");
					this.OnAddressPostCodeChanged();
				}
			}
		}
		
		[Column(Storage="_AddressFull", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AddressFull
		{
			get
			{
				return this._AddressFull;
			}
			set
			{
				if ((this._AddressFull != value))
				{
					this.OnAddressFullChanging(value);
					this.SendPropertyChanging();
					this._AddressFull = value;
					this.SendPropertyChanged("AddressFull");
					this.OnAddressFullChanged();
				}
			}
		}
		
		[Column(Storage="_Telephone1", DbType="VarChar(30)")]
		public string Telephone1
		{
			get
			{
				return this._Telephone1;
			}
			set
			{
				if ((this._Telephone1 != value))
				{
					this.OnTelephone1Changing(value);
					this.SendPropertyChanging();
					this._Telephone1 = value;
					this.SendPropertyChanged("Telephone1");
					this.OnTelephone1Changed();
				}
			}
		}
		
		[Column(Storage="_Telephone2", DbType="VarChar(30)")]
		public string Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this.OnTelephone2Changing(value);
					this.SendPropertyChanging();
					this._Telephone2 = value;
					this.SendPropertyChanged("Telephone2");
					this.OnTelephone2Changed();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(30)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_CellNumber", DbType="VarChar(30)")]
		public string CellNumber
		{
			get
			{
				return this._CellNumber;
			}
			set
			{
				if ((this._CellNumber != value))
				{
					this.OnCellNumberChanging(value);
					this.SendPropertyChanging();
					this._CellNumber = value;
					this.SendPropertyChanged("CellNumber");
					this.OnCellNumberChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this.OnLastAmendedByChanging(value);
					this.SendPropertyChanging();
					this._LastAmendedBy = value;
					this.SendPropertyChanged("LastAmendedBy");
					this.OnLastAmendedByChanged();
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this.OnDateLastAmendedChanging(value);
					this.SendPropertyChanging();
					this._DateLastAmended = value;
					this.SendPropertyChanged("DateLastAmended");
					this.OnDateLastAmendedChanged();
				}
			}
		}
		
		[Column(Storage="_Town", DbType="VarChar(60)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[Column(Storage="_County", DbType="VarChar(60)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this.OnCountyChanging(value);
					this.SendPropertyChanging();
					this._County = value;
					this.SendPropertyChanged("County");
					this.OnCountyChanged();
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(60)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private bool _FlgDeleted;
		
		private string _ShortName;
		
		private string _FullName;
		
		private string _ContactTitle;
		
		private string _ContactInitials;
		
		private string _ContactForename;
		
		private string _ContactSurname;
		
		private string _CompanyNotes;
		
		private System.Nullable<bool> _FlgSystemLocked;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmenededBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnFlgDeletedChanging(bool value);
    partial void OnFlgDeletedChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnContactTitleChanging(string value);
    partial void OnContactTitleChanged();
    partial void OnContactInitialsChanging(string value);
    partial void OnContactInitialsChanged();
    partial void OnContactForenameChanging(string value);
    partial void OnContactForenameChanged();
    partial void OnContactSurnameChanging(string value);
    partial void OnContactSurnameChanged();
    partial void OnCompanyNotesChanging(string value);
    partial void OnCompanyNotesChanged();
    partial void OnFlgSystemLockedChanging(System.Nullable<bool> value);
    partial void OnFlgSystemLockedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnLastAmenededByChanging(System.Nullable<int> value);
    partial void OnLastAmenededByChanged();
    partial void OnDateLastAmendedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastAmendedChanged();
    #endregion
		
		public Company()
		{
			OnCreated();
		}
		
		[Column(Storage="_CompanyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[Column(Storage="_FlgDeleted", DbType="Bit NOT NULL")]
		public bool FlgDeleted
		{
			get
			{
				return this._FlgDeleted;
			}
			set
			{
				if ((this._FlgDeleted != value))
				{
					this.OnFlgDeletedChanging(value);
					this.SendPropertyChanging();
					this._FlgDeleted = value;
					this.SendPropertyChanged("FlgDeleted");
					this.OnFlgDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_ShortName", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[Column(Storage="_ContactTitle", DbType="VarChar(7)")]
		public string ContactTitle
		{
			get
			{
				return this._ContactTitle;
			}
			set
			{
				if ((this._ContactTitle != value))
				{
					this.OnContactTitleChanging(value);
					this.SendPropertyChanging();
					this._ContactTitle = value;
					this.SendPropertyChanged("ContactTitle");
					this.OnContactTitleChanged();
				}
			}
		}
		
		[Column(Storage="_ContactInitials", DbType="VarChar(3)")]
		public string ContactInitials
		{
			get
			{
				return this._ContactInitials;
			}
			set
			{
				if ((this._ContactInitials != value))
				{
					this.OnContactInitialsChanging(value);
					this.SendPropertyChanging();
					this._ContactInitials = value;
					this.SendPropertyChanged("ContactInitials");
					this.OnContactInitialsChanged();
				}
			}
		}
		
		[Column(Storage="_ContactForename", DbType="VarChar(60)")]
		public string ContactForename
		{
			get
			{
				return this._ContactForename;
			}
			set
			{
				if ((this._ContactForename != value))
				{
					this.OnContactForenameChanging(value);
					this.SendPropertyChanging();
					this._ContactForename = value;
					this.SendPropertyChanged("ContactForename");
					this.OnContactForenameChanged();
				}
			}
		}
		
		[Column(Storage="_ContactSurname", DbType="VarChar(60)")]
		public string ContactSurname
		{
			get
			{
				return this._ContactSurname;
			}
			set
			{
				if ((this._ContactSurname != value))
				{
					this.OnContactSurnameChanging(value);
					this.SendPropertyChanging();
					this._ContactSurname = value;
					this.SendPropertyChanged("ContactSurname");
					this.OnContactSurnameChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyNotes", DbType="VarChar(1000)")]
		public string CompanyNotes
		{
			get
			{
				return this._CompanyNotes;
			}
			set
			{
				if ((this._CompanyNotes != value))
				{
					this.OnCompanyNotesChanging(value);
					this.SendPropertyChanging();
					this._CompanyNotes = value;
					this.SendPropertyChanged("CompanyNotes");
					this.OnCompanyNotesChanged();
				}
			}
		}
		
		[Column(Storage="_FlgSystemLocked", DbType="Bit")]
		public System.Nullable<bool> FlgSystemLocked
		{
			get
			{
				return this._FlgSystemLocked;
			}
			set
			{
				if ((this._FlgSystemLocked != value))
				{
					this.OnFlgSystemLockedChanging(value);
					this.SendPropertyChanging();
					this._FlgSystemLocked = value;
					this.SendPropertyChanged("FlgSystemLocked");
					this.OnFlgSystemLockedChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastAmenededBy", DbType="Int")]
		public System.Nullable<int> LastAmenededBy
		{
			get
			{
				return this._LastAmenededBy;
			}
			set
			{
				if ((this._LastAmenededBy != value))
				{
					this.OnLastAmenededByChanging(value);
					this.SendPropertyChanging();
					this._LastAmenededBy = value;
					this.SendPropertyChanged("LastAmenededBy");
					this.OnLastAmenededByChanged();
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this.OnDateLastAmendedChanging(value);
					this.SendPropertyChanging();
					this._DateLastAmended = value;
					this.SendPropertyChanged("DateLastAmended");
					this.OnDateLastAmendedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailQueue")]
	public partial class EmailQueue
	{
		
		private int _Queue_id;
		
		private System.DateTime _Log_time;
		
		private byte _Num_of_tries;
		
		private string _From_name;
		
		private string _From_address;
		
		private string _To_names;
		
		private string _To_addresses;
		
		private string _Subject;
		
		private string _Body;
		
		private System.Nullable<System.DateTime> _Sent_time;
		
		public EmailQueue()
		{
		}
		
		[Column(Name="queue_id", Storage="_Queue_id", DbType="Int NOT NULL")]
		public int Queue_id
		{
			get
			{
				return this._Queue_id;
			}
			set
			{
				if ((this._Queue_id != value))
				{
					this._Queue_id = value;
				}
			}
		}
		
		[Column(Name="log_time", Storage="_Log_time", DbType="DateTime NOT NULL")]
		public System.DateTime Log_time
		{
			get
			{
				return this._Log_time;
			}
			set
			{
				if ((this._Log_time != value))
				{
					this._Log_time = value;
				}
			}
		}
		
		[Column(Name="num_of_tries", Storage="_Num_of_tries", DbType="TinyInt NOT NULL")]
		public byte Num_of_tries
		{
			get
			{
				return this._Num_of_tries;
			}
			set
			{
				if ((this._Num_of_tries != value))
				{
					this._Num_of_tries = value;
				}
			}
		}
		
		[Column(Name="from_name", Storage="_From_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string From_name
		{
			get
			{
				return this._From_name;
			}
			set
			{
				if ((this._From_name != value))
				{
					this._From_name = value;
				}
			}
		}
		
		[Column(Name="from_address", Storage="_From_address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string From_address
		{
			get
			{
				return this._From_address;
			}
			set
			{
				if ((this._From_address != value))
				{
					this._From_address = value;
				}
			}
		}
		
		[Column(Name="to_names", Storage="_To_names", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string To_names
		{
			get
			{
				return this._To_names;
			}
			set
			{
				if ((this._To_names != value))
				{
					this._To_names = value;
				}
			}
		}
		
		[Column(Name="to_addresses", Storage="_To_addresses", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string To_addresses
		{
			get
			{
				return this._To_addresses;
			}
			set
			{
				if ((this._To_addresses != value))
				{
					this._To_addresses = value;
				}
			}
		}
		
		[Column(Name="subject", Storage="_Subject", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[Column(Name="body", Storage="_Body", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this._Body = value;
				}
			}
		}
		
		[Column(Name="sent_time", Storage="_Sent_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Sent_time
		{
			get
			{
				return this._Sent_time;
			}
			set
			{
				if ((this._Sent_time != value))
				{
					this._Sent_time = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EmailTemplates")]
	public partial class EmailTemplate
	{
		
		private int _Email_template_id;
		
		private string _Name;
		
		private string _Subject;
		
		private string _Html;
		
		public EmailTemplate()
		{
		}
		
		[Column(Name="email_template_id", Storage="_Email_template_id", DbType="Int NOT NULL")]
		public int Email_template_id
		{
			get
			{
				return this._Email_template_id;
			}
			set
			{
				if ((this._Email_template_id != value))
				{
					this._Email_template_id = value;
				}
			}
		}
		
		[Column(Name="name", Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Name="subject", Storage="_Subject", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[Column(Name="html", Storage="_Html", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Html
		{
			get
			{
				return this._Html;
			}
			set
			{
				if ((this._Html != value))
				{
					this._Html = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductId;
		
		private string _Name;
		
		private string _Description;
		
		private string _ShortName;
		
		private string _TermsURL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnTermsURLChanging(string value);
    partial void OnTermsURLChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[Column(Storage="_ProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Storage="_ShortName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[Column(Storage="_TermsURL", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TermsURL
		{
			get
			{
				return this._TermsURL;
			}
			set
			{
				if ((this._TermsURL != value))
				{
					this.OnTermsURLChanging(value);
					this.SendPropertyChanging();
					this._TermsURL = value;
					this.SendPropertyChanged("TermsURL");
					this.OnTermsURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Sessions")]
	public partial class Session
	{
		
		private string _GUID;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _IP;
		
		public Session()
		{
		}
		
		[Column(Storage="_GUID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[Column(Storage="_IP", DbType="VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.UserProducts")]
	public partial class UserProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _ProductId;
		
		private int _CompanyId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public UserProduct()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProductId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserUid;
		
		private string _VerificationCode;
		
		private bool _FlgReceiveMails;
		
		private bool _FlgDeleted;
		
		private bool _FlgEntityOnHold;
		
		private System.Nullable<int> _UserApprovedStatus;
		
		private System.Nullable<int> _UserPymtType;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Initials;
		
		private string _NameForename;
		
		private string _NameSurname;
		
		private string _NameJobTitle;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<byte> _ReminderQuestionId;
		
		private string _ReminderCustomQuestion;
		
		private string _ReminderQuestionAnswer;
		
		private bool _FlgVerified;
		
		private bool _FlgEnabled;
		
		private System.Nullable<int> _LoginAttempts;
		
		private bool _FlgLocked;
		
		private string _LockedReason;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserUidChanging(string value);
    partial void OnUserUidChanged();
    partial void OnVerificationCodeChanging(string value);
    partial void OnVerificationCodeChanged();
    partial void OnFlgReceiveMailsChanging(bool value);
    partial void OnFlgReceiveMailsChanged();
    partial void OnFlgDeletedChanging(bool value);
    partial void OnFlgDeletedChanged();
    partial void OnFlgEntityOnHoldChanging(bool value);
    partial void OnFlgEntityOnHoldChanged();
    partial void OnUserApprovedStatusChanging(System.Nullable<int> value);
    partial void OnUserApprovedStatusChanged();
    partial void OnUserPymtTypeChanging(System.Nullable<int> value);
    partial void OnUserPymtTypeChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnInitialsChanging(string value);
    partial void OnInitialsChanged();
    partial void OnNameForenameChanging(string value);
    partial void OnNameForenameChanged();
    partial void OnNameSurnameChanging(string value);
    partial void OnNameSurnameChanged();
    partial void OnNameJobTitleChanging(string value);
    partial void OnNameJobTitleChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnReminderQuestionIdChanging(System.Nullable<byte> value);
    partial void OnReminderQuestionIdChanged();
    partial void OnReminderCustomQuestionChanging(string value);
    partial void OnReminderCustomQuestionChanged();
    partial void OnReminderQuestionAnswerChanging(string value);
    partial void OnReminderQuestionAnswerChanged();
    partial void OnFlgVerifiedChanging(bool value);
    partial void OnFlgVerifiedChanged();
    partial void OnFlgEnabledChanging(bool value);
    partial void OnFlgEnabledChanged();
    partial void OnLoginAttemptsChanging(System.Nullable<int> value);
    partial void OnLoginAttemptsChanged();
    partial void OnFlgLockedChanging(bool value);
    partial void OnFlgLockedChanged();
    partial void OnLockedReasonChanging(string value);
    partial void OnLockedReasonChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnLastAmendedByChanging(System.Nullable<int> value);
    partial void OnLastAmendedByChanged();
    partial void OnDateLastAmendedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastAmendedChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserUid", DbType="Char(36) NOT NULL", CanBeNull=false)]
		public string UserUid
		{
			get
			{
				return this._UserUid;
			}
			set
			{
				if ((this._UserUid != value))
				{
					this.OnUserUidChanging(value);
					this.SendPropertyChanging();
					this._UserUid = value;
					this.SendPropertyChanged("UserUid");
					this.OnUserUidChanged();
				}
			}
		}
		
		[Column(Storage="_VerificationCode", DbType="Char(36)")]
		public string VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this.OnVerificationCodeChanging(value);
					this.SendPropertyChanging();
					this._VerificationCode = value;
					this.SendPropertyChanged("VerificationCode");
					this.OnVerificationCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FlgReceiveMails", DbType="Bit NOT NULL")]
		public bool FlgReceiveMails
		{
			get
			{
				return this._FlgReceiveMails;
			}
			set
			{
				if ((this._FlgReceiveMails != value))
				{
					this.OnFlgReceiveMailsChanging(value);
					this.SendPropertyChanging();
					this._FlgReceiveMails = value;
					this.SendPropertyChanged("FlgReceiveMails");
					this.OnFlgReceiveMailsChanged();
				}
			}
		}
		
		[Column(Storage="_FlgDeleted", DbType="Bit NOT NULL")]
		public bool FlgDeleted
		{
			get
			{
				return this._FlgDeleted;
			}
			set
			{
				if ((this._FlgDeleted != value))
				{
					this.OnFlgDeletedChanging(value);
					this.SendPropertyChanging();
					this._FlgDeleted = value;
					this.SendPropertyChanged("FlgDeleted");
					this.OnFlgDeletedChanged();
				}
			}
		}
		
		[Column(Storage="_FlgEntityOnHold", DbType="Bit NOT NULL")]
		public bool FlgEntityOnHold
		{
			get
			{
				return this._FlgEntityOnHold;
			}
			set
			{
				if ((this._FlgEntityOnHold != value))
				{
					this.OnFlgEntityOnHoldChanging(value);
					this.SendPropertyChanging();
					this._FlgEntityOnHold = value;
					this.SendPropertyChanged("FlgEntityOnHold");
					this.OnFlgEntityOnHoldChanged();
				}
			}
		}
		
		[Column(Storage="_UserApprovedStatus", DbType="Int")]
		public System.Nullable<int> UserApprovedStatus
		{
			get
			{
				return this._UserApprovedStatus;
			}
			set
			{
				if ((this._UserApprovedStatus != value))
				{
					this.OnUserApprovedStatusChanging(value);
					this.SendPropertyChanging();
					this._UserApprovedStatus = value;
					this.SendPropertyChanged("UserApprovedStatus");
					this.OnUserApprovedStatusChanged();
				}
			}
		}
		
		[Column(Storage="_UserPymtType", DbType="Int")]
		public System.Nullable<int> UserPymtType
		{
			get
			{
				return this._UserPymtType;
			}
			set
			{
				if ((this._UserPymtType != value))
				{
					this.OnUserPymtTypeChanging(value);
					this.SendPropertyChanging();
					this._UserPymtType = value;
					this.SendPropertyChanged("UserPymtType");
					this.OnUserPymtTypeChanged();
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(60)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(7)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="VarChar(3)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this.OnInitialsChanging(value);
					this.SendPropertyChanging();
					this._Initials = value;
					this.SendPropertyChanged("Initials");
					this.OnInitialsChanged();
				}
			}
		}
		
		[Column(Storage="_NameForename", DbType="VarChar(60)")]
		public string NameForename
		{
			get
			{
				return this._NameForename;
			}
			set
			{
				if ((this._NameForename != value))
				{
					this.OnNameForenameChanging(value);
					this.SendPropertyChanging();
					this._NameForename = value;
					this.SendPropertyChanged("NameForename");
					this.OnNameForenameChanged();
				}
			}
		}
		
		[Column(Storage="_NameSurname", DbType="VarChar(60)")]
		public string NameSurname
		{
			get
			{
				return this._NameSurname;
			}
			set
			{
				if ((this._NameSurname != value))
				{
					this.OnNameSurnameChanging(value);
					this.SendPropertyChanging();
					this._NameSurname = value;
					this.SendPropertyChanged("NameSurname");
					this.OnNameSurnameChanged();
				}
			}
		}
		
		[Column(Storage="_NameJobTitle", DbType="VarChar(255)")]
		public string NameJobTitle
		{
			get
			{
				return this._NameJobTitle;
			}
			set
			{
				if ((this._NameJobTitle != value))
				{
					this.OnNameJobTitleChanging(value);
					this.SendPropertyChanging();
					this._NameJobTitle = value;
					this.SendPropertyChanged("NameJobTitle");
					this.OnNameJobTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionId", DbType="TinyInt")]
		public System.Nullable<byte> ReminderQuestionId
		{
			get
			{
				return this._ReminderQuestionId;
			}
			set
			{
				if ((this._ReminderQuestionId != value))
				{
					this.OnReminderQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._ReminderQuestionId = value;
					this.SendPropertyChanged("ReminderQuestionId");
					this.OnReminderQuestionIdChanged();
				}
			}
		}
		
		[Column(Storage="_ReminderCustomQuestion", DbType="VarChar(50)")]
		public string ReminderCustomQuestion
		{
			get
			{
				return this._ReminderCustomQuestion;
			}
			set
			{
				if ((this._ReminderCustomQuestion != value))
				{
					this.OnReminderCustomQuestionChanging(value);
					this.SendPropertyChanging();
					this._ReminderCustomQuestion = value;
					this.SendPropertyChanged("ReminderCustomQuestion");
					this.OnReminderCustomQuestionChanged();
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionAnswer", DbType="VarChar(50)")]
		public string ReminderQuestionAnswer
		{
			get
			{
				return this._ReminderQuestionAnswer;
			}
			set
			{
				if ((this._ReminderQuestionAnswer != value))
				{
					this.OnReminderQuestionAnswerChanging(value);
					this.SendPropertyChanging();
					this._ReminderQuestionAnswer = value;
					this.SendPropertyChanged("ReminderQuestionAnswer");
					this.OnReminderQuestionAnswerChanged();
				}
			}
		}
		
		[Column(Storage="_FlgVerified", DbType="Bit NOT NULL")]
		public bool FlgVerified
		{
			get
			{
				return this._FlgVerified;
			}
			set
			{
				if ((this._FlgVerified != value))
				{
					this.OnFlgVerifiedChanging(value);
					this.SendPropertyChanging();
					this._FlgVerified = value;
					this.SendPropertyChanged("FlgVerified");
					this.OnFlgVerifiedChanged();
				}
			}
		}
		
		[Column(Storage="_FlgEnabled", DbType="Bit NOT NULL")]
		public bool FlgEnabled
		{
			get
			{
				return this._FlgEnabled;
			}
			set
			{
				if ((this._FlgEnabled != value))
				{
					this.OnFlgEnabledChanging(value);
					this.SendPropertyChanging();
					this._FlgEnabled = value;
					this.SendPropertyChanged("FlgEnabled");
					this.OnFlgEnabledChanged();
				}
			}
		}
		
		[Column(Storage="_LoginAttempts", DbType="Int")]
		public System.Nullable<int> LoginAttempts
		{
			get
			{
				return this._LoginAttempts;
			}
			set
			{
				if ((this._LoginAttempts != value))
				{
					this.OnLoginAttemptsChanging(value);
					this.SendPropertyChanging();
					this._LoginAttempts = value;
					this.SendPropertyChanged("LoginAttempts");
					this.OnLoginAttemptsChanged();
				}
			}
		}
		
		[Column(Storage="_FlgLocked", DbType="Bit NOT NULL")]
		public bool FlgLocked
		{
			get
			{
				return this._FlgLocked;
			}
			set
			{
				if ((this._FlgLocked != value))
				{
					this.OnFlgLockedChanging(value);
					this.SendPropertyChanging();
					this._FlgLocked = value;
					this.SendPropertyChanged("FlgLocked");
					this.OnFlgLockedChanged();
				}
			}
		}
		
		[Column(Storage="_LockedReason", DbType="VarChar(255)")]
		public string LockedReason
		{
			get
			{
				return this._LockedReason;
			}
			set
			{
				if ((this._LockedReason != value))
				{
					this.OnLockedReasonChanging(value);
					this.SendPropertyChanging();
					this._LockedReason = value;
					this.SendPropertyChanged("LockedReason");
					this.OnLockedReasonChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this.OnLastAmendedByChanging(value);
					this.SendPropertyChanging();
					this._LastAmendedBy = value;
					this.SendPropertyChanged("LastAmendedBy");
					this.OnLastAmendedByChanged();
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this.OnDateLastAmendedChanging(value);
					this.SendPropertyChanging();
					this._DateLastAmended = value;
					this.SendPropertyChanged("DateLastAmended");
					this.OnDateLastAmendedChanged();
				}
			}
		}
		
		[Column(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class AddressSelectByTableIdResult
	{
		
		private System.Nullable<int> _AddressId;
		
		private System.Nullable<bool> _Flg_Deleted;
		
		private System.Nullable<int> _CatagoryId;
		
		private System.Nullable<int> _TableId;
		
		private System.Nullable<bool> _FlgSameAsCustomer;
		
		private System.Nullable<bool> _FlgSameAsBilling;
		
		private string _MultiAddType;
		
		private string _AddressName;
		
		private string _AddressNo;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _AddressLine3;
		
		private string _AddressLine4;
		
		private string _AddressLine5;
		
		private string _AddressPostCode;
		
		private string _AddressFull;
		
		private string _Telephone1;
		
		private string _Telephone2;
		
		private string _Fax;
		
		private string _CellNumber;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Town;
		
		private string _County;
		
		private string _Country;
		
		public AddressSelectByTableIdResult()
		{
		}
		
		[Column(Storage="_AddressId", DbType="Int")]
		public System.Nullable<int> AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this._AddressId = value;
				}
			}
		}
		
		[Column(Storage="_Flg_Deleted", DbType="Bit")]
		public System.Nullable<bool> Flg_Deleted
		{
			get
			{
				return this._Flg_Deleted;
			}
			set
			{
				if ((this._Flg_Deleted != value))
				{
					this._Flg_Deleted = value;
				}
			}
		}
		
		[Column(Storage="_CatagoryId", DbType="Int")]
		public System.Nullable<int> CatagoryId
		{
			get
			{
				return this._CatagoryId;
			}
			set
			{
				if ((this._CatagoryId != value))
				{
					this._CatagoryId = value;
				}
			}
		}
		
		[Column(Storage="_TableId", DbType="Int")]
		public System.Nullable<int> TableId
		{
			get
			{
				return this._TableId;
			}
			set
			{
				if ((this._TableId != value))
				{
					this._TableId = value;
				}
			}
		}
		
		[Column(Storage="_FlgSameAsCustomer", DbType="Bit")]
		public System.Nullable<bool> FlgSameAsCustomer
		{
			get
			{
				return this._FlgSameAsCustomer;
			}
			set
			{
				if ((this._FlgSameAsCustomer != value))
				{
					this._FlgSameAsCustomer = value;
				}
			}
		}
		
		[Column(Storage="_FlgSameAsBilling", DbType="Bit")]
		public System.Nullable<bool> FlgSameAsBilling
		{
			get
			{
				return this._FlgSameAsBilling;
			}
			set
			{
				if ((this._FlgSameAsBilling != value))
				{
					this._FlgSameAsBilling = value;
				}
			}
		}
		
		[Column(Storage="_MultiAddType", DbType="VarChar(10)")]
		public string MultiAddType
		{
			get
			{
				return this._MultiAddType;
			}
			set
			{
				if ((this._MultiAddType != value))
				{
					this._MultiAddType = value;
				}
			}
		}
		
		[Column(Storage="_AddressName", DbType="VarChar(255)")]
		public string AddressName
		{
			get
			{
				return this._AddressName;
			}
			set
			{
				if ((this._AddressName != value))
				{
					this._AddressName = value;
				}
			}
		}
		
		[Column(Storage="_AddressNo", DbType="VarChar(32)")]
		public string AddressNo
		{
			get
			{
				return this._AddressNo;
			}
			set
			{
				if ((this._AddressNo != value))
				{
					this._AddressNo = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine1", DbType="VarChar(60)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this._AddressLine1 = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine2", DbType="VarChar(60)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this._AddressLine2 = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine3", DbType="VarChar(60)")]
		public string AddressLine3
		{
			get
			{
				return this._AddressLine3;
			}
			set
			{
				if ((this._AddressLine3 != value))
				{
					this._AddressLine3 = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine4", DbType="VarChar(60)")]
		public string AddressLine4
		{
			get
			{
				return this._AddressLine4;
			}
			set
			{
				if ((this._AddressLine4 != value))
				{
					this._AddressLine4 = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine5", DbType="VarChar(60)")]
		public string AddressLine5
		{
			get
			{
				return this._AddressLine5;
			}
			set
			{
				if ((this._AddressLine5 != value))
				{
					this._AddressLine5 = value;
				}
			}
		}
		
		[Column(Storage="_AddressPostCode", DbType="VarChar(9)")]
		public string AddressPostCode
		{
			get
			{
				return this._AddressPostCode;
			}
			set
			{
				if ((this._AddressPostCode != value))
				{
					this._AddressPostCode = value;
				}
			}
		}
		
		[Column(Storage="_AddressFull", DbType="VarChar(MAX)")]
		public string AddressFull
		{
			get
			{
				return this._AddressFull;
			}
			set
			{
				if ((this._AddressFull != value))
				{
					this._AddressFull = value;
				}
			}
		}
		
		[Column(Storage="_Telephone1", DbType="VarChar(30)")]
		public string Telephone1
		{
			get
			{
				return this._Telephone1;
			}
			set
			{
				if ((this._Telephone1 != value))
				{
					this._Telephone1 = value;
				}
			}
		}
		
		[Column(Storage="_Telephone2", DbType="VarChar(30)")]
		public string Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this._Telephone2 = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(30)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_CellNumber", DbType="VarChar(30)")]
		public string CellNumber
		{
			get
			{
				return this._CellNumber;
			}
			set
			{
				if ((this._CellNumber != value))
				{
					this._CellNumber = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this._LastAmendedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this._DateLastAmended = value;
				}
			}
		}
		
		[Column(Storage="_Town", DbType="VarChar(60)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this._Town = value;
				}
			}
		}
		
		[Column(Storage="_County", DbType="VarChar(60)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this._County = value;
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(60)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
	}
	
	public partial class AddressUpdateResult
	{
		
		private System.Nullable<int> _AddressId;
		
		private System.Nullable<bool> _Flg_Deleted;
		
		private System.Nullable<int> _CatagoryId;
		
		private System.Nullable<int> _TableId;
		
		private System.Nullable<bool> _FlgSameAsCustomer;
		
		private System.Nullable<bool> _FlgSameAsBilling;
		
		private string _MultiAddType;
		
		private string _AddressName;
		
		private string _AddressNo;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _AddressLine3;
		
		private string _AddressLine4;
		
		private string _AddressLine5;
		
		private string _AddressPostCode;
		
		private string _AddressFull;
		
		private string _Telephone1;
		
		private string _Telephone2;
		
		private string _Fax;
		
		private string _CellNumber;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Town;
		
		private string _County;
		
		private string _Country;
		
		public AddressUpdateResult()
		{
		}
		
		[Column(Storage="_AddressId", DbType="Int")]
		public System.Nullable<int> AddressId
		{
			get
			{
				return this._AddressId;
			}
			set
			{
				if ((this._AddressId != value))
				{
					this._AddressId = value;
				}
			}
		}
		
		[Column(Storage="_Flg_Deleted", DbType="Bit")]
		public System.Nullable<bool> Flg_Deleted
		{
			get
			{
				return this._Flg_Deleted;
			}
			set
			{
				if ((this._Flg_Deleted != value))
				{
					this._Flg_Deleted = value;
				}
			}
		}
		
		[Column(Storage="_CatagoryId", DbType="Int")]
		public System.Nullable<int> CatagoryId
		{
			get
			{
				return this._CatagoryId;
			}
			set
			{
				if ((this._CatagoryId != value))
				{
					this._CatagoryId = value;
				}
			}
		}
		
		[Column(Storage="_TableId", DbType="Int")]
		public System.Nullable<int> TableId
		{
			get
			{
				return this._TableId;
			}
			set
			{
				if ((this._TableId != value))
				{
					this._TableId = value;
				}
			}
		}
		
		[Column(Storage="_FlgSameAsCustomer", DbType="Bit")]
		public System.Nullable<bool> FlgSameAsCustomer
		{
			get
			{
				return this._FlgSameAsCustomer;
			}
			set
			{
				if ((this._FlgSameAsCustomer != value))
				{
					this._FlgSameAsCustomer = value;
				}
			}
		}
		
		[Column(Storage="_FlgSameAsBilling", DbType="Bit")]
		public System.Nullable<bool> FlgSameAsBilling
		{
			get
			{
				return this._FlgSameAsBilling;
			}
			set
			{
				if ((this._FlgSameAsBilling != value))
				{
					this._FlgSameAsBilling = value;
				}
			}
		}
		
		[Column(Storage="_MultiAddType", DbType="VarChar(10)")]
		public string MultiAddType
		{
			get
			{
				return this._MultiAddType;
			}
			set
			{
				if ((this._MultiAddType != value))
				{
					this._MultiAddType = value;
				}
			}
		}
		
		[Column(Storage="_AddressName", DbType="VarChar(255)")]
		public string AddressName
		{
			get
			{
				return this._AddressName;
			}
			set
			{
				if ((this._AddressName != value))
				{
					this._AddressName = value;
				}
			}
		}
		
		[Column(Storage="_AddressNo", DbType="VarChar(32)")]
		public string AddressNo
		{
			get
			{
				return this._AddressNo;
			}
			set
			{
				if ((this._AddressNo != value))
				{
					this._AddressNo = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine1", DbType="VarChar(60)")]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this._AddressLine1 = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine2", DbType="VarChar(60)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this._AddressLine2 = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine3", DbType="VarChar(60)")]
		public string AddressLine3
		{
			get
			{
				return this._AddressLine3;
			}
			set
			{
				if ((this._AddressLine3 != value))
				{
					this._AddressLine3 = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine4", DbType="VarChar(60)")]
		public string AddressLine4
		{
			get
			{
				return this._AddressLine4;
			}
			set
			{
				if ((this._AddressLine4 != value))
				{
					this._AddressLine4 = value;
				}
			}
		}
		
		[Column(Storage="_AddressLine5", DbType="VarChar(60)")]
		public string AddressLine5
		{
			get
			{
				return this._AddressLine5;
			}
			set
			{
				if ((this._AddressLine5 != value))
				{
					this._AddressLine5 = value;
				}
			}
		}
		
		[Column(Storage="_AddressPostCode", DbType="VarChar(9)")]
		public string AddressPostCode
		{
			get
			{
				return this._AddressPostCode;
			}
			set
			{
				if ((this._AddressPostCode != value))
				{
					this._AddressPostCode = value;
				}
			}
		}
		
		[Column(Storage="_AddressFull", DbType="VarChar(MAX)")]
		public string AddressFull
		{
			get
			{
				return this._AddressFull;
			}
			set
			{
				if ((this._AddressFull != value))
				{
					this._AddressFull = value;
				}
			}
		}
		
		[Column(Storage="_Telephone1", DbType="VarChar(30)")]
		public string Telephone1
		{
			get
			{
				return this._Telephone1;
			}
			set
			{
				if ((this._Telephone1 != value))
				{
					this._Telephone1 = value;
				}
			}
		}
		
		[Column(Storage="_Telephone2", DbType="VarChar(30)")]
		public string Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this._Telephone2 = value;
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(30)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[Column(Storage="_CellNumber", DbType="VarChar(30)")]
		public string CellNumber
		{
			get
			{
				return this._CellNumber;
			}
			set
			{
				if ((this._CellNumber != value))
				{
					this._CellNumber = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this._LastAmendedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this._DateLastAmended = value;
				}
			}
		}
		
		[Column(Storage="_Town", DbType="VarChar(60)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this._Town = value;
				}
			}
		}
		
		[Column(Storage="_County", DbType="VarChar(60)")]
		public string County
		{
			get
			{
				return this._County;
			}
			set
			{
				if ((this._County != value))
				{
					this._County = value;
				}
			}
		}
		
		[Column(Storage="_Country", DbType="VarChar(60)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
	}
	
	public partial class ProductSelectResult
	{
		
		private System.Nullable<int> _ProductId;
		
		private string _Name;
		
		private string _Description;
		
		private string _ShortName;
		
		private string _TermsURL;
		
		public ProductSelectResult()
		{
		}
		
		[Column(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_ShortName", DbType="VarChar(20)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[Column(Storage="_TermsURL", DbType="VarChar(200)")]
		public string TermsURL
		{
			get
			{
				return this._TermsURL;
			}
			set
			{
				if ((this._TermsURL != value))
				{
					this._TermsURL = value;
				}
			}
		}
	}
	
	public partial class ProductSelectByIdResult
	{
		
		private System.Nullable<int> _ProductId;
		
		private string _Name;
		
		private string _Description;
		
		private string _ShortName;
		
		private string _TermsURL;
		
		public ProductSelectByIdResult()
		{
		}
		
		[Column(Storage="_ProductId", DbType="Int")]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[Column(Storage="_ShortName", DbType="VarChar(20)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[Column(Storage="_TermsURL", DbType="VarChar(200)")]
		public string TermsURL
		{
			get
			{
				return this._TermsURL;
			}
			set
			{
				if ((this._TermsURL != value))
				{
					this._TermsURL = value;
				}
			}
		}
	}
	
	public partial class SessionSelectByGUIDResult
	{
		
		private string _GUID;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _IP;
		
		public SessionSelectByGUIDResult()
		{
		}
		
		[Column(Storage="_GUID", DbType="VarChar(50)")]
		public string GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[Column(Storage="_IP", DbType="VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
	}
	
	public partial class SessionSelectByIPResult
	{
		
		private string _GUID;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _IP;
		
		public SessionSelectByIPResult()
		{
		}
		
		[Column(Storage="_GUID", DbType="VarChar(50)")]
		public string GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[Column(Storage="_IP", DbType="VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
	}
	
	public partial class SessionSelectByUserIdResult
	{
		
		private string _GUID;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _IP;
		
		public SessionSelectByUserIdResult()
		{
		}
		
		[Column(Storage="_GUID", DbType="VarChar(50)")]
		public string GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this._EndTime = value;
				}
			}
		}
		
		[Column(Storage="_IP", DbType="VarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
	}
	
	public partial class Sp_helpdiagramdefinitionResult
	{
		
		private System.Nullable<int> _Version;
		
		private System.Data.Linq.Binary _Definition;
		
		public Sp_helpdiagramdefinitionResult()
		{
		}
		
		[Column(Name="version", Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[Column(Name="definition", Storage="_Definition", DbType="VarBinary(MAX)", CanBeNull=true)]
		public System.Data.Linq.Binary Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this._Definition = value;
				}
			}
		}
	}
	
	public partial class Sp_helpdiagramsResult
	{
		
		private string _Database;
		
		private string _Name;
		
		private System.Nullable<int> _ID;
		
		private string _Owner;
		
		private System.Nullable<int> _OwnerID;
		
		public Sp_helpdiagramsResult()
		{
		}
		
		[Column(Storage="_Database", DbType="NVarChar(128)")]
		public string Database
		{
			get
			{
				return this._Database;
			}
			set
			{
				if ((this._Database != value))
				{
					this._Database = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Owner", DbType="NVarChar(128)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[Column(Storage="_OwnerID", DbType="Int")]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
	}
	
	public partial class UserInsertResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserUid;
		
		private string _VerificationCode;
		
		private System.Nullable<bool> _FlgReceiveMails;
		
		private System.Nullable<bool> _FlgDeleted;
		
		private System.Nullable<bool> _FlgEntityOnHold;
		
		private System.Nullable<int> _UserApprovedStatus;
		
		private System.Nullable<int> _UserPymtType;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Initials;
		
		private string _NameForename;
		
		private string _NameSurname;
		
		private string _NameJobTitle;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<byte> _ReminderQuestionId;
		
		private string _ReminderCustomQuestion;
		
		private string _ReminderQuestionAnswer;
		
		private System.Nullable<bool> _FlgVerified;
		
		private System.Nullable<bool> _FlgEnabled;
		
		private System.Nullable<int> _LoginAttempts;
		
		private System.Nullable<bool> _FlgLocked;
		
		private string _LockedReason;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Role;
		
		public UserInsertResult()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserUid", DbType="Char(36)")]
		public string UserUid
		{
			get
			{
				return this._UserUid;
			}
			set
			{
				if ((this._UserUid != value))
				{
					this._UserUid = value;
				}
			}
		}
		
		[Column(Storage="_VerificationCode", DbType="Char(36)")]
		public string VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this._VerificationCode = value;
				}
			}
		}
		
		[Column(Storage="_FlgReceiveMails", DbType="Bit")]
		public System.Nullable<bool> FlgReceiveMails
		{
			get
			{
				return this._FlgReceiveMails;
			}
			set
			{
				if ((this._FlgReceiveMails != value))
				{
					this._FlgReceiveMails = value;
				}
			}
		}
		
		[Column(Storage="_FlgDeleted", DbType="Bit")]
		public System.Nullable<bool> FlgDeleted
		{
			get
			{
				return this._FlgDeleted;
			}
			set
			{
				if ((this._FlgDeleted != value))
				{
					this._FlgDeleted = value;
				}
			}
		}
		
		[Column(Storage="_FlgEntityOnHold", DbType="Bit")]
		public System.Nullable<bool> FlgEntityOnHold
		{
			get
			{
				return this._FlgEntityOnHold;
			}
			set
			{
				if ((this._FlgEntityOnHold != value))
				{
					this._FlgEntityOnHold = value;
				}
			}
		}
		
		[Column(Storage="_UserApprovedStatus", DbType="Int")]
		public System.Nullable<int> UserApprovedStatus
		{
			get
			{
				return this._UserApprovedStatus;
			}
			set
			{
				if ((this._UserApprovedStatus != value))
				{
					this._UserApprovedStatus = value;
				}
			}
		}
		
		[Column(Storage="_UserPymtType", DbType="Int")]
		public System.Nullable<int> UserPymtType
		{
			get
			{
				return this._UserPymtType;
			}
			set
			{
				if ((this._UserPymtType != value))
				{
					this._UserPymtType = value;
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(60)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(7)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="VarChar(3)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this._Initials = value;
				}
			}
		}
		
		[Column(Storage="_NameForename", DbType="VarChar(60)")]
		public string NameForename
		{
			get
			{
				return this._NameForename;
			}
			set
			{
				if ((this._NameForename != value))
				{
					this._NameForename = value;
				}
			}
		}
		
		[Column(Storage="_NameSurname", DbType="VarChar(60)")]
		public string NameSurname
		{
			get
			{
				return this._NameSurname;
			}
			set
			{
				if ((this._NameSurname != value))
				{
					this._NameSurname = value;
				}
			}
		}
		
		[Column(Storage="_NameJobTitle", DbType="VarChar(255)")]
		public string NameJobTitle
		{
			get
			{
				return this._NameJobTitle;
			}
			set
			{
				if ((this._NameJobTitle != value))
				{
					this._NameJobTitle = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionId", DbType="TinyInt")]
		public System.Nullable<byte> ReminderQuestionId
		{
			get
			{
				return this._ReminderQuestionId;
			}
			set
			{
				if ((this._ReminderQuestionId != value))
				{
					this._ReminderQuestionId = value;
				}
			}
		}
		
		[Column(Storage="_ReminderCustomQuestion", DbType="VarChar(50)")]
		public string ReminderCustomQuestion
		{
			get
			{
				return this._ReminderCustomQuestion;
			}
			set
			{
				if ((this._ReminderCustomQuestion != value))
				{
					this._ReminderCustomQuestion = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionAnswer", DbType="VarChar(50)")]
		public string ReminderQuestionAnswer
		{
			get
			{
				return this._ReminderQuestionAnswer;
			}
			set
			{
				if ((this._ReminderQuestionAnswer != value))
				{
					this._ReminderQuestionAnswer = value;
				}
			}
		}
		
		[Column(Storage="_FlgVerified", DbType="Bit")]
		public System.Nullable<bool> FlgVerified
		{
			get
			{
				return this._FlgVerified;
			}
			set
			{
				if ((this._FlgVerified != value))
				{
					this._FlgVerified = value;
				}
			}
		}
		
		[Column(Storage="_FlgEnabled", DbType="Bit")]
		public System.Nullable<bool> FlgEnabled
		{
			get
			{
				return this._FlgEnabled;
			}
			set
			{
				if ((this._FlgEnabled != value))
				{
					this._FlgEnabled = value;
				}
			}
		}
		
		[Column(Storage="_LoginAttempts", DbType="Int")]
		public System.Nullable<int> LoginAttempts
		{
			get
			{
				return this._LoginAttempts;
			}
			set
			{
				if ((this._LoginAttempts != value))
				{
					this._LoginAttempts = value;
				}
			}
		}
		
		[Column(Storage="_FlgLocked", DbType="Bit")]
		public System.Nullable<bool> FlgLocked
		{
			get
			{
				return this._FlgLocked;
			}
			set
			{
				if ((this._FlgLocked != value))
				{
					this._FlgLocked = value;
				}
			}
		}
		
		[Column(Storage="_LockedReason", DbType="VarChar(255)")]
		public string LockedReason
		{
			get
			{
				return this._LockedReason;
			}
			set
			{
				if ((this._LockedReason != value))
				{
					this._LockedReason = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this._LastAmendedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this._DateLastAmended = value;
				}
			}
		}
		
		[Column(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	public partial class UserSelectResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserUid;
		
		private string _VerificationCode;
		
		private System.Nullable<bool> _FlgReceiveMails;
		
		private System.Nullable<bool> _FlgDeleted;
		
		private System.Nullable<bool> _FlgEntityOnHold;
		
		private System.Nullable<int> _UserApprovedStatus;
		
		private System.Nullable<int> _UserPymtType;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Initials;
		
		private string _NameForename;
		
		private string _NameSurname;
		
		private string _NameJobTitle;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<byte> _ReminderQuestionId;
		
		private string _ReminderCustomQuestion;
		
		private string _ReminderQuestionAnswer;
		
		private System.Nullable<bool> _FlgVerified;
		
		private System.Nullable<bool> _FlgEnabled;
		
		private System.Nullable<int> _LoginAttempts;
		
		private System.Nullable<bool> _FlgLocked;
		
		private string _LockedReason;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Role;
		
		public UserSelectResult()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserUid", DbType="Char(36)")]
		public string UserUid
		{
			get
			{
				return this._UserUid;
			}
			set
			{
				if ((this._UserUid != value))
				{
					this._UserUid = value;
				}
			}
		}
		
		[Column(Storage="_VerificationCode", DbType="Char(36)")]
		public string VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this._VerificationCode = value;
				}
			}
		}
		
		[Column(Storage="_FlgReceiveMails", DbType="Bit")]
		public System.Nullable<bool> FlgReceiveMails
		{
			get
			{
				return this._FlgReceiveMails;
			}
			set
			{
				if ((this._FlgReceiveMails != value))
				{
					this._FlgReceiveMails = value;
				}
			}
		}
		
		[Column(Storage="_FlgDeleted", DbType="Bit")]
		public System.Nullable<bool> FlgDeleted
		{
			get
			{
				return this._FlgDeleted;
			}
			set
			{
				if ((this._FlgDeleted != value))
				{
					this._FlgDeleted = value;
				}
			}
		}
		
		[Column(Storage="_FlgEntityOnHold", DbType="Bit")]
		public System.Nullable<bool> FlgEntityOnHold
		{
			get
			{
				return this._FlgEntityOnHold;
			}
			set
			{
				if ((this._FlgEntityOnHold != value))
				{
					this._FlgEntityOnHold = value;
				}
			}
		}
		
		[Column(Storage="_UserApprovedStatus", DbType="Int")]
		public System.Nullable<int> UserApprovedStatus
		{
			get
			{
				return this._UserApprovedStatus;
			}
			set
			{
				if ((this._UserApprovedStatus != value))
				{
					this._UserApprovedStatus = value;
				}
			}
		}
		
		[Column(Storage="_UserPymtType", DbType="Int")]
		public System.Nullable<int> UserPymtType
		{
			get
			{
				return this._UserPymtType;
			}
			set
			{
				if ((this._UserPymtType != value))
				{
					this._UserPymtType = value;
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(60)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(7)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="VarChar(3)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this._Initials = value;
				}
			}
		}
		
		[Column(Storage="_NameForename", DbType="VarChar(60)")]
		public string NameForename
		{
			get
			{
				return this._NameForename;
			}
			set
			{
				if ((this._NameForename != value))
				{
					this._NameForename = value;
				}
			}
		}
		
		[Column(Storage="_NameSurname", DbType="VarChar(60)")]
		public string NameSurname
		{
			get
			{
				return this._NameSurname;
			}
			set
			{
				if ((this._NameSurname != value))
				{
					this._NameSurname = value;
				}
			}
		}
		
		[Column(Storage="_NameJobTitle", DbType="VarChar(255)")]
		public string NameJobTitle
		{
			get
			{
				return this._NameJobTitle;
			}
			set
			{
				if ((this._NameJobTitle != value))
				{
					this._NameJobTitle = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionId", DbType="TinyInt")]
		public System.Nullable<byte> ReminderQuestionId
		{
			get
			{
				return this._ReminderQuestionId;
			}
			set
			{
				if ((this._ReminderQuestionId != value))
				{
					this._ReminderQuestionId = value;
				}
			}
		}
		
		[Column(Storage="_ReminderCustomQuestion", DbType="VarChar(50)")]
		public string ReminderCustomQuestion
		{
			get
			{
				return this._ReminderCustomQuestion;
			}
			set
			{
				if ((this._ReminderCustomQuestion != value))
				{
					this._ReminderCustomQuestion = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionAnswer", DbType="VarChar(50)")]
		public string ReminderQuestionAnswer
		{
			get
			{
				return this._ReminderQuestionAnswer;
			}
			set
			{
				if ((this._ReminderQuestionAnswer != value))
				{
					this._ReminderQuestionAnswer = value;
				}
			}
		}
		
		[Column(Storage="_FlgVerified", DbType="Bit")]
		public System.Nullable<bool> FlgVerified
		{
			get
			{
				return this._FlgVerified;
			}
			set
			{
				if ((this._FlgVerified != value))
				{
					this._FlgVerified = value;
				}
			}
		}
		
		[Column(Storage="_FlgEnabled", DbType="Bit")]
		public System.Nullable<bool> FlgEnabled
		{
			get
			{
				return this._FlgEnabled;
			}
			set
			{
				if ((this._FlgEnabled != value))
				{
					this._FlgEnabled = value;
				}
			}
		}
		
		[Column(Storage="_LoginAttempts", DbType="Int")]
		public System.Nullable<int> LoginAttempts
		{
			get
			{
				return this._LoginAttempts;
			}
			set
			{
				if ((this._LoginAttempts != value))
				{
					this._LoginAttempts = value;
				}
			}
		}
		
		[Column(Storage="_FlgLocked", DbType="Bit")]
		public System.Nullable<bool> FlgLocked
		{
			get
			{
				return this._FlgLocked;
			}
			set
			{
				if ((this._FlgLocked != value))
				{
					this._FlgLocked = value;
				}
			}
		}
		
		[Column(Storage="_LockedReason", DbType="VarChar(255)")]
		public string LockedReason
		{
			get
			{
				return this._LockedReason;
			}
			set
			{
				if ((this._LockedReason != value))
				{
					this._LockedReason = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this._LastAmendedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this._DateLastAmended = value;
				}
			}
		}
		
		[Column(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	public partial class UserSelectByEmailResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserUid;
		
		private string _VerificationCode;
		
		private System.Nullable<bool> _FlgReceiveMails;
		
		private System.Nullable<bool> _FlgDeleted;
		
		private System.Nullable<bool> _FlgEntityOnHold;
		
		private System.Nullable<int> _UserApprovedStatus;
		
		private System.Nullable<int> _UserPymtType;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Initials;
		
		private string _NameForename;
		
		private string _NameSurname;
		
		private string _NameJobTitle;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<byte> _ReminderQuestionId;
		
		private string _ReminderCustomQuestion;
		
		private string _ReminderQuestionAnswer;
		
		private System.Nullable<bool> _FlgVerified;
		
		private System.Nullable<bool> _FlgEnabled;
		
		private System.Nullable<int> _LoginAttempts;
		
		private System.Nullable<bool> _FlgLocked;
		
		private string _LockedReason;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Role;
		
		public UserSelectByEmailResult()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserUid", DbType="Char(36)")]
		public string UserUid
		{
			get
			{
				return this._UserUid;
			}
			set
			{
				if ((this._UserUid != value))
				{
					this._UserUid = value;
				}
			}
		}
		
		[Column(Storage="_VerificationCode", DbType="Char(36)")]
		public string VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this._VerificationCode = value;
				}
			}
		}
		
		[Column(Storage="_FlgReceiveMails", DbType="Bit")]
		public System.Nullable<bool> FlgReceiveMails
		{
			get
			{
				return this._FlgReceiveMails;
			}
			set
			{
				if ((this._FlgReceiveMails != value))
				{
					this._FlgReceiveMails = value;
				}
			}
		}
		
		[Column(Storage="_FlgDeleted", DbType="Bit")]
		public System.Nullable<bool> FlgDeleted
		{
			get
			{
				return this._FlgDeleted;
			}
			set
			{
				if ((this._FlgDeleted != value))
				{
					this._FlgDeleted = value;
				}
			}
		}
		
		[Column(Storage="_FlgEntityOnHold", DbType="Bit")]
		public System.Nullable<bool> FlgEntityOnHold
		{
			get
			{
				return this._FlgEntityOnHold;
			}
			set
			{
				if ((this._FlgEntityOnHold != value))
				{
					this._FlgEntityOnHold = value;
				}
			}
		}
		
		[Column(Storage="_UserApprovedStatus", DbType="Int")]
		public System.Nullable<int> UserApprovedStatus
		{
			get
			{
				return this._UserApprovedStatus;
			}
			set
			{
				if ((this._UserApprovedStatus != value))
				{
					this._UserApprovedStatus = value;
				}
			}
		}
		
		[Column(Storage="_UserPymtType", DbType="Int")]
		public System.Nullable<int> UserPymtType
		{
			get
			{
				return this._UserPymtType;
			}
			set
			{
				if ((this._UserPymtType != value))
				{
					this._UserPymtType = value;
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(60)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(7)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="VarChar(3)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this._Initials = value;
				}
			}
		}
		
		[Column(Storage="_NameForename", DbType="VarChar(60)")]
		public string NameForename
		{
			get
			{
				return this._NameForename;
			}
			set
			{
				if ((this._NameForename != value))
				{
					this._NameForename = value;
				}
			}
		}
		
		[Column(Storage="_NameSurname", DbType="VarChar(60)")]
		public string NameSurname
		{
			get
			{
				return this._NameSurname;
			}
			set
			{
				if ((this._NameSurname != value))
				{
					this._NameSurname = value;
				}
			}
		}
		
		[Column(Storage="_NameJobTitle", DbType="VarChar(255)")]
		public string NameJobTitle
		{
			get
			{
				return this._NameJobTitle;
			}
			set
			{
				if ((this._NameJobTitle != value))
				{
					this._NameJobTitle = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionId", DbType="TinyInt")]
		public System.Nullable<byte> ReminderQuestionId
		{
			get
			{
				return this._ReminderQuestionId;
			}
			set
			{
				if ((this._ReminderQuestionId != value))
				{
					this._ReminderQuestionId = value;
				}
			}
		}
		
		[Column(Storage="_ReminderCustomQuestion", DbType="VarChar(50)")]
		public string ReminderCustomQuestion
		{
			get
			{
				return this._ReminderCustomQuestion;
			}
			set
			{
				if ((this._ReminderCustomQuestion != value))
				{
					this._ReminderCustomQuestion = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionAnswer", DbType="VarChar(50)")]
		public string ReminderQuestionAnswer
		{
			get
			{
				return this._ReminderQuestionAnswer;
			}
			set
			{
				if ((this._ReminderQuestionAnswer != value))
				{
					this._ReminderQuestionAnswer = value;
				}
			}
		}
		
		[Column(Storage="_FlgVerified", DbType="Bit")]
		public System.Nullable<bool> FlgVerified
		{
			get
			{
				return this._FlgVerified;
			}
			set
			{
				if ((this._FlgVerified != value))
				{
					this._FlgVerified = value;
				}
			}
		}
		
		[Column(Storage="_FlgEnabled", DbType="Bit")]
		public System.Nullable<bool> FlgEnabled
		{
			get
			{
				return this._FlgEnabled;
			}
			set
			{
				if ((this._FlgEnabled != value))
				{
					this._FlgEnabled = value;
				}
			}
		}
		
		[Column(Storage="_LoginAttempts", DbType="Int")]
		public System.Nullable<int> LoginAttempts
		{
			get
			{
				return this._LoginAttempts;
			}
			set
			{
				if ((this._LoginAttempts != value))
				{
					this._LoginAttempts = value;
				}
			}
		}
		
		[Column(Storage="_FlgLocked", DbType="Bit")]
		public System.Nullable<bool> FlgLocked
		{
			get
			{
				return this._FlgLocked;
			}
			set
			{
				if ((this._FlgLocked != value))
				{
					this._FlgLocked = value;
				}
			}
		}
		
		[Column(Storage="_LockedReason", DbType="VarChar(255)")]
		public string LockedReason
		{
			get
			{
				return this._LockedReason;
			}
			set
			{
				if ((this._LockedReason != value))
				{
					this._LockedReason = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this._LastAmendedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this._DateLastAmended = value;
				}
			}
		}
		
		[Column(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	public partial class UserSelectByIdResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserUid;
		
		private string _VerificationCode;
		
		private System.Nullable<bool> _FlgReceiveMails;
		
		private System.Nullable<bool> _FlgDeleted;
		
		private System.Nullable<bool> _FlgEntityOnHold;
		
		private System.Nullable<int> _UserApprovedStatus;
		
		private System.Nullable<int> _UserPymtType;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Initials;
		
		private string _NameForename;
		
		private string _NameSurname;
		
		private string _NameJobTitle;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<byte> _ReminderQuestionId;
		
		private string _ReminderCustomQuestion;
		
		private string _ReminderQuestionAnswer;
		
		private System.Nullable<bool> _FlgVerified;
		
		private System.Nullable<bool> _FlgEnabled;
		
		private System.Nullable<int> _LoginAttempts;
		
		private System.Nullable<bool> _FlgLocked;
		
		private string _LockedReason;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Role;
		
		public UserSelectByIdResult()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserUid", DbType="Char(36)")]
		public string UserUid
		{
			get
			{
				return this._UserUid;
			}
			set
			{
				if ((this._UserUid != value))
				{
					this._UserUid = value;
				}
			}
		}
		
		[Column(Storage="_VerificationCode", DbType="Char(36)")]
		public string VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this._VerificationCode = value;
				}
			}
		}
		
		[Column(Storage="_FlgReceiveMails", DbType="Bit")]
		public System.Nullable<bool> FlgReceiveMails
		{
			get
			{
				return this._FlgReceiveMails;
			}
			set
			{
				if ((this._FlgReceiveMails != value))
				{
					this._FlgReceiveMails = value;
				}
			}
		}
		
		[Column(Storage="_FlgDeleted", DbType="Bit")]
		public System.Nullable<bool> FlgDeleted
		{
			get
			{
				return this._FlgDeleted;
			}
			set
			{
				if ((this._FlgDeleted != value))
				{
					this._FlgDeleted = value;
				}
			}
		}
		
		[Column(Storage="_FlgEntityOnHold", DbType="Bit")]
		public System.Nullable<bool> FlgEntityOnHold
		{
			get
			{
				return this._FlgEntityOnHold;
			}
			set
			{
				if ((this._FlgEntityOnHold != value))
				{
					this._FlgEntityOnHold = value;
				}
			}
		}
		
		[Column(Storage="_UserApprovedStatus", DbType="Int")]
		public System.Nullable<int> UserApprovedStatus
		{
			get
			{
				return this._UserApprovedStatus;
			}
			set
			{
				if ((this._UserApprovedStatus != value))
				{
					this._UserApprovedStatus = value;
				}
			}
		}
		
		[Column(Storage="_UserPymtType", DbType="Int")]
		public System.Nullable<int> UserPymtType
		{
			get
			{
				return this._UserPymtType;
			}
			set
			{
				if ((this._UserPymtType != value))
				{
					this._UserPymtType = value;
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(60)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(7)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="VarChar(3)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this._Initials = value;
				}
			}
		}
		
		[Column(Storage="_NameForename", DbType="VarChar(60)")]
		public string NameForename
		{
			get
			{
				return this._NameForename;
			}
			set
			{
				if ((this._NameForename != value))
				{
					this._NameForename = value;
				}
			}
		}
		
		[Column(Storage="_NameSurname", DbType="VarChar(60)")]
		public string NameSurname
		{
			get
			{
				return this._NameSurname;
			}
			set
			{
				if ((this._NameSurname != value))
				{
					this._NameSurname = value;
				}
			}
		}
		
		[Column(Storage="_NameJobTitle", DbType="VarChar(255)")]
		public string NameJobTitle
		{
			get
			{
				return this._NameJobTitle;
			}
			set
			{
				if ((this._NameJobTitle != value))
				{
					this._NameJobTitle = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionId", DbType="TinyInt")]
		public System.Nullable<byte> ReminderQuestionId
		{
			get
			{
				return this._ReminderQuestionId;
			}
			set
			{
				if ((this._ReminderQuestionId != value))
				{
					this._ReminderQuestionId = value;
				}
			}
		}
		
		[Column(Storage="_ReminderCustomQuestion", DbType="VarChar(50)")]
		public string ReminderCustomQuestion
		{
			get
			{
				return this._ReminderCustomQuestion;
			}
			set
			{
				if ((this._ReminderCustomQuestion != value))
				{
					this._ReminderCustomQuestion = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionAnswer", DbType="VarChar(50)")]
		public string ReminderQuestionAnswer
		{
			get
			{
				return this._ReminderQuestionAnswer;
			}
			set
			{
				if ((this._ReminderQuestionAnswer != value))
				{
					this._ReminderQuestionAnswer = value;
				}
			}
		}
		
		[Column(Storage="_FlgVerified", DbType="Bit")]
		public System.Nullable<bool> FlgVerified
		{
			get
			{
				return this._FlgVerified;
			}
			set
			{
				if ((this._FlgVerified != value))
				{
					this._FlgVerified = value;
				}
			}
		}
		
		[Column(Storage="_FlgEnabled", DbType="Bit")]
		public System.Nullable<bool> FlgEnabled
		{
			get
			{
				return this._FlgEnabled;
			}
			set
			{
				if ((this._FlgEnabled != value))
				{
					this._FlgEnabled = value;
				}
			}
		}
		
		[Column(Storage="_LoginAttempts", DbType="Int")]
		public System.Nullable<int> LoginAttempts
		{
			get
			{
				return this._LoginAttempts;
			}
			set
			{
				if ((this._LoginAttempts != value))
				{
					this._LoginAttempts = value;
				}
			}
		}
		
		[Column(Storage="_FlgLocked", DbType="Bit")]
		public System.Nullable<bool> FlgLocked
		{
			get
			{
				return this._FlgLocked;
			}
			set
			{
				if ((this._FlgLocked != value))
				{
					this._FlgLocked = value;
				}
			}
		}
		
		[Column(Storage="_LockedReason", DbType="VarChar(255)")]
		public string LockedReason
		{
			get
			{
				return this._LockedReason;
			}
			set
			{
				if ((this._LockedReason != value))
				{
					this._LockedReason = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this._LastAmendedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this._DateLastAmended = value;
				}
			}
		}
		
		[Column(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	public partial class UserSelectByUIDResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserUid;
		
		private string _VerificationCode;
		
		private System.Nullable<bool> _FlgReceiveMails;
		
		private System.Nullable<bool> _FlgDeleted;
		
		private System.Nullable<bool> _FlgEntityOnHold;
		
		private System.Nullable<int> _UserApprovedStatus;
		
		private System.Nullable<int> _UserPymtType;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Initials;
		
		private string _NameForename;
		
		private string _NameSurname;
		
		private string _NameJobTitle;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<byte> _ReminderQuestionId;
		
		private string _ReminderCustomQuestion;
		
		private string _ReminderQuestionAnswer;
		
		private System.Nullable<bool> _FlgVerified;
		
		private System.Nullable<bool> _FlgEnabled;
		
		private System.Nullable<int> _LoginAttempts;
		
		private System.Nullable<bool> _FlgLocked;
		
		private string _LockedReason;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Role;
		
		public UserSelectByUIDResult()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserUid", DbType="Char(36)")]
		public string UserUid
		{
			get
			{
				return this._UserUid;
			}
			set
			{
				if ((this._UserUid != value))
				{
					this._UserUid = value;
				}
			}
		}
		
		[Column(Storage="_VerificationCode", DbType="Char(36)")]
		public string VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this._VerificationCode = value;
				}
			}
		}
		
		[Column(Storage="_FlgReceiveMails", DbType="Bit")]
		public System.Nullable<bool> FlgReceiveMails
		{
			get
			{
				return this._FlgReceiveMails;
			}
			set
			{
				if ((this._FlgReceiveMails != value))
				{
					this._FlgReceiveMails = value;
				}
			}
		}
		
		[Column(Storage="_FlgDeleted", DbType="Bit")]
		public System.Nullable<bool> FlgDeleted
		{
			get
			{
				return this._FlgDeleted;
			}
			set
			{
				if ((this._FlgDeleted != value))
				{
					this._FlgDeleted = value;
				}
			}
		}
		
		[Column(Storage="_FlgEntityOnHold", DbType="Bit")]
		public System.Nullable<bool> FlgEntityOnHold
		{
			get
			{
				return this._FlgEntityOnHold;
			}
			set
			{
				if ((this._FlgEntityOnHold != value))
				{
					this._FlgEntityOnHold = value;
				}
			}
		}
		
		[Column(Storage="_UserApprovedStatus", DbType="Int")]
		public System.Nullable<int> UserApprovedStatus
		{
			get
			{
				return this._UserApprovedStatus;
			}
			set
			{
				if ((this._UserApprovedStatus != value))
				{
					this._UserApprovedStatus = value;
				}
			}
		}
		
		[Column(Storage="_UserPymtType", DbType="Int")]
		public System.Nullable<int> UserPymtType
		{
			get
			{
				return this._UserPymtType;
			}
			set
			{
				if ((this._UserPymtType != value))
				{
					this._UserPymtType = value;
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(60)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(7)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="VarChar(3)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this._Initials = value;
				}
			}
		}
		
		[Column(Storage="_NameForename", DbType="VarChar(60)")]
		public string NameForename
		{
			get
			{
				return this._NameForename;
			}
			set
			{
				if ((this._NameForename != value))
				{
					this._NameForename = value;
				}
			}
		}
		
		[Column(Storage="_NameSurname", DbType="VarChar(60)")]
		public string NameSurname
		{
			get
			{
				return this._NameSurname;
			}
			set
			{
				if ((this._NameSurname != value))
				{
					this._NameSurname = value;
				}
			}
		}
		
		[Column(Storage="_NameJobTitle", DbType="VarChar(255)")]
		public string NameJobTitle
		{
			get
			{
				return this._NameJobTitle;
			}
			set
			{
				if ((this._NameJobTitle != value))
				{
					this._NameJobTitle = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionId", DbType="TinyInt")]
		public System.Nullable<byte> ReminderQuestionId
		{
			get
			{
				return this._ReminderQuestionId;
			}
			set
			{
				if ((this._ReminderQuestionId != value))
				{
					this._ReminderQuestionId = value;
				}
			}
		}
		
		[Column(Storage="_ReminderCustomQuestion", DbType="VarChar(50)")]
		public string ReminderCustomQuestion
		{
			get
			{
				return this._ReminderCustomQuestion;
			}
			set
			{
				if ((this._ReminderCustomQuestion != value))
				{
					this._ReminderCustomQuestion = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionAnswer", DbType="VarChar(50)")]
		public string ReminderQuestionAnswer
		{
			get
			{
				return this._ReminderQuestionAnswer;
			}
			set
			{
				if ((this._ReminderQuestionAnswer != value))
				{
					this._ReminderQuestionAnswer = value;
				}
			}
		}
		
		[Column(Storage="_FlgVerified", DbType="Bit")]
		public System.Nullable<bool> FlgVerified
		{
			get
			{
				return this._FlgVerified;
			}
			set
			{
				if ((this._FlgVerified != value))
				{
					this._FlgVerified = value;
				}
			}
		}
		
		[Column(Storage="_FlgEnabled", DbType="Bit")]
		public System.Nullable<bool> FlgEnabled
		{
			get
			{
				return this._FlgEnabled;
			}
			set
			{
				if ((this._FlgEnabled != value))
				{
					this._FlgEnabled = value;
				}
			}
		}
		
		[Column(Storage="_LoginAttempts", DbType="Int")]
		public System.Nullable<int> LoginAttempts
		{
			get
			{
				return this._LoginAttempts;
			}
			set
			{
				if ((this._LoginAttempts != value))
				{
					this._LoginAttempts = value;
				}
			}
		}
		
		[Column(Storage="_FlgLocked", DbType="Bit")]
		public System.Nullable<bool> FlgLocked
		{
			get
			{
				return this._FlgLocked;
			}
			set
			{
				if ((this._FlgLocked != value))
				{
					this._FlgLocked = value;
				}
			}
		}
		
		[Column(Storage="_LockedReason", DbType="VarChar(255)")]
		public string LockedReason
		{
			get
			{
				return this._LockedReason;
			}
			set
			{
				if ((this._LockedReason != value))
				{
					this._LockedReason = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this._LastAmendedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this._DateLastAmended = value;
				}
			}
		}
		
		[Column(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	public partial class UserUpdatePasswordResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserUid;
		
		private string _VerificationCode;
		
		private System.Nullable<bool> _FlgReceiveMails;
		
		private System.Nullable<bool> _FlgDeleted;
		
		private System.Nullable<bool> _FlgEntityOnHold;
		
		private System.Nullable<int> _UserApprovedStatus;
		
		private System.Nullable<int> _UserPymtType;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Initials;
		
		private string _NameForename;
		
		private string _NameSurname;
		
		private string _NameJobTitle;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<byte> _ReminderQuestionId;
		
		private string _ReminderCustomQuestion;
		
		private string _ReminderQuestionAnswer;
		
		private System.Nullable<bool> _FlgVerified;
		
		private System.Nullable<bool> _FlgEnabled;
		
		private System.Nullable<int> _LoginAttempts;
		
		private System.Nullable<bool> _FlgLocked;
		
		private string _LockedReason;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _LastAmendedBy;
		
		private System.Nullable<System.DateTime> _DateLastAmended;
		
		private string _Role;
		
		public UserUpdatePasswordResult()
		{
		}
		
		[Column(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[Column(Storage="_UserUid", DbType="Char(36)")]
		public string UserUid
		{
			get
			{
				return this._UserUid;
			}
			set
			{
				if ((this._UserUid != value))
				{
					this._UserUid = value;
				}
			}
		}
		
		[Column(Storage="_VerificationCode", DbType="Char(36)")]
		public string VerificationCode
		{
			get
			{
				return this._VerificationCode;
			}
			set
			{
				if ((this._VerificationCode != value))
				{
					this._VerificationCode = value;
				}
			}
		}
		
		[Column(Storage="_FlgReceiveMails", DbType="Bit")]
		public System.Nullable<bool> FlgReceiveMails
		{
			get
			{
				return this._FlgReceiveMails;
			}
			set
			{
				if ((this._FlgReceiveMails != value))
				{
					this._FlgReceiveMails = value;
				}
			}
		}
		
		[Column(Storage="_FlgDeleted", DbType="Bit")]
		public System.Nullable<bool> FlgDeleted
		{
			get
			{
				return this._FlgDeleted;
			}
			set
			{
				if ((this._FlgDeleted != value))
				{
					this._FlgDeleted = value;
				}
			}
		}
		
		[Column(Storage="_FlgEntityOnHold", DbType="Bit")]
		public System.Nullable<bool> FlgEntityOnHold
		{
			get
			{
				return this._FlgEntityOnHold;
			}
			set
			{
				if ((this._FlgEntityOnHold != value))
				{
					this._FlgEntityOnHold = value;
				}
			}
		}
		
		[Column(Storage="_UserApprovedStatus", DbType="Int")]
		public System.Nullable<int> UserApprovedStatus
		{
			get
			{
				return this._UserApprovedStatus;
			}
			set
			{
				if ((this._UserApprovedStatus != value))
				{
					this._UserApprovedStatus = value;
				}
			}
		}
		
		[Column(Storage="_UserPymtType", DbType="Int")]
		public System.Nullable<int> UserPymtType
		{
			get
			{
				return this._UserPymtType;
			}
			set
			{
				if ((this._UserPymtType != value))
				{
					this._UserPymtType = value;
				}
			}
		}
		
		[Column(Storage="_FullName", DbType="VarChar(60)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[Column(Storage="_Title", DbType="VarChar(7)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="VarChar(3)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this._Initials = value;
				}
			}
		}
		
		[Column(Storage="_NameForename", DbType="VarChar(60)")]
		public string NameForename
		{
			get
			{
				return this._NameForename;
			}
			set
			{
				if ((this._NameForename != value))
				{
					this._NameForename = value;
				}
			}
		}
		
		[Column(Storage="_NameSurname", DbType="VarChar(60)")]
		public string NameSurname
		{
			get
			{
				return this._NameSurname;
			}
			set
			{
				if ((this._NameSurname != value))
				{
					this._NameSurname = value;
				}
			}
		}
		
		[Column(Storage="_NameJobTitle", DbType="VarChar(255)")]
		public string NameJobTitle
		{
			get
			{
				return this._NameJobTitle;
			}
			set
			{
				if ((this._NameJobTitle != value))
				{
					this._NameJobTitle = value;
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(60)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionId", DbType="TinyInt")]
		public System.Nullable<byte> ReminderQuestionId
		{
			get
			{
				return this._ReminderQuestionId;
			}
			set
			{
				if ((this._ReminderQuestionId != value))
				{
					this._ReminderQuestionId = value;
				}
			}
		}
		
		[Column(Storage="_ReminderCustomQuestion", DbType="VarChar(50)")]
		public string ReminderCustomQuestion
		{
			get
			{
				return this._ReminderCustomQuestion;
			}
			set
			{
				if ((this._ReminderCustomQuestion != value))
				{
					this._ReminderCustomQuestion = value;
				}
			}
		}
		
		[Column(Storage="_ReminderQuestionAnswer", DbType="VarChar(50)")]
		public string ReminderQuestionAnswer
		{
			get
			{
				return this._ReminderQuestionAnswer;
			}
			set
			{
				if ((this._ReminderQuestionAnswer != value))
				{
					this._ReminderQuestionAnswer = value;
				}
			}
		}
		
		[Column(Storage="_FlgVerified", DbType="Bit")]
		public System.Nullable<bool> FlgVerified
		{
			get
			{
				return this._FlgVerified;
			}
			set
			{
				if ((this._FlgVerified != value))
				{
					this._FlgVerified = value;
				}
			}
		}
		
		[Column(Storage="_FlgEnabled", DbType="Bit")]
		public System.Nullable<bool> FlgEnabled
		{
			get
			{
				return this._FlgEnabled;
			}
			set
			{
				if ((this._FlgEnabled != value))
				{
					this._FlgEnabled = value;
				}
			}
		}
		
		[Column(Storage="_LoginAttempts", DbType="Int")]
		public System.Nullable<int> LoginAttempts
		{
			get
			{
				return this._LoginAttempts;
			}
			set
			{
				if ((this._LoginAttempts != value))
				{
					this._LoginAttempts = value;
				}
			}
		}
		
		[Column(Storage="_FlgLocked", DbType="Bit")]
		public System.Nullable<bool> FlgLocked
		{
			get
			{
				return this._FlgLocked;
			}
			set
			{
				if ((this._FlgLocked != value))
				{
					this._FlgLocked = value;
				}
			}
		}
		
		[Column(Storage="_LockedReason", DbType="VarChar(255)")]
		public string LockedReason
		{
			get
			{
				return this._LockedReason;
			}
			set
			{
				if ((this._LockedReason != value))
				{
					this._LockedReason = value;
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastAmendedBy", DbType="Int")]
		public System.Nullable<int> LastAmendedBy
		{
			get
			{
				return this._LastAmendedBy;
			}
			set
			{
				if ((this._LastAmendedBy != value))
				{
					this._LastAmendedBy = value;
				}
			}
		}
		
		[Column(Storage="_DateLastAmended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastAmended
		{
			get
			{
				return this._DateLastAmended;
			}
			set
			{
				if ((this._DateLastAmended != value))
				{
					this._DateLastAmended = value;
				}
			}
		}
		
		[Column(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
