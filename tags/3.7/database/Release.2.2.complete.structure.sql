/**************************************************************************
-- -Generated by xSQL SDK for Schema Comparison and Synchronization
-- -Date/Time: March 01, 2010 18:42:24

-- -Summary:
    Contains the T-SQL script that makes the database 
    .\SQLEXPRESS.ShoppingTrolleyRelease the same as the database .\SQLEXPRESS.ShoppingTrolley

-- -Action:
    Execute this script on .\SQLEXPRESS.ShoppingTrolleyRelease

-- -SQL Server version: 10.0.1600
**************************************************************************/

BEGIN TRANSACTION
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	SET QUOTED_IDENTIFIER ON
	SET ANSI_NULLS ON
	SET ANSI_PADDING ON
	SET ANSI_WARNINGS ON
	SET ARITHABORT ON
	SET NUMERIC_ROUNDABORT OFF
	SET CONCAT_NULL_YIELDS_NULL ON
	SET XACT_ABORT ON
COMMIT TRANSACTION
GO

IF EXISTS (select * from tempdb..sysobjects where id = OBJECT_ID('tempdb..#ErrorLog')) 
	DROP TABLE #ErrorLog 
CREATE TABLE #ErrorLog 
( pkid [int] IDENTITY(1,1) NOT NULL, errno [int] NOT NULL, errdescr [varchar](100) NULL )
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[un_transaction_details] (
	[transaction_detail_id] [int] IDENTITY (1,1) NOT NULL,
	[transaction_id] [int] NOT NULL,
	[product_id] [int] NOT NULL,
	[product_name] [varchar](100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[version_id] [int] NULL,
	[version_name] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[product_detail_id] [int] NULL,
	[product_detail_name] [varchar](100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[quantity] [int] NOT NULL,
	[duration] [int] NOT NULL,
	[price] [float] NOT NULL
) ON [PRIMARY]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add table dbo.un_transaction_details')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[un_transactions] (
	[transaction_id] [int] IDENTITY (1,1) NOT NULL,
	[user_id] [int] NOT NULL,
	[gateway_id] [varchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[created_time] [datetime] NOT NULL,
	[completed_time] [datetime] NULL,
	[transaction_unid] [char](36) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[gw_decision] [varchar](100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	[gw_reason_code] [int] NULL
) ON [PRIMARY]
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add table dbo.un_transactions')
END
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.TransactionDelete
(
	@Original_transaction_id int
)
AS
	SET NOCOUNT OFF;
DELETE FROM [un_transactions] WHERE (([transaction_id] = @Original_transaction_id))
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.TransactionDelete')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[TransactionInsert]
(
	@user_id int
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_transactions] ([user_id], [created_time], [transaction_unid]) VALUES (@user_id, GETDATE(), newid());
	
SELECT * FROM un_transactions WHERE (transaction_id = SCOPE_IDENTITY());


GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.TransactionInsert')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.TransactionSelect
AS
	SET NOCOUNT ON;
SELECT        un_transactions.*
FROM            un_transactions
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.TransactionSelect')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.TransactionDetailDelete
(
	@Original_transaction_detail_id int
)
AS
	SET NOCOUNT OFF;
DELETE FROM [un_transaction_details] WHERE (([transaction_detail_id] = @Original_transaction_detail_id))
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.TransactionDetailDelete')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.TransactionDetailInsert
(
	@transaction_id int,
	@product_id int,
	@product_name varchar(100),
	@version_id int,
	@version_name varchar(50),
	@product_detail_id int,
	@product_detail_name varchar(100),
	@quantity int,
	@duration int,
	@price float
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_transaction_details] ([transaction_id], [product_id], [product_name], [version_id], [version_name], [product_detail_id], [product_detail_name], [quantity], [duration], [price]) VALUES (@transaction_id, @product_id, @product_name, @version_id, @version_name, @product_detail_id, @product_detail_name, @quantity, @duration, @price);
	
SELECT transaction_detail_id, transaction_id, product_id, product_name, version_id, version_name, product_detail_id, product_detail_name, quantity, duration, price FROM un_transaction_details WHERE (transaction_detail_id = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.TransactionDetailInsert')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.TransactionDetailSelect
AS
	SET NOCOUNT ON;
SELECT        un_transaction_details.*
FROM            un_transaction_details
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.TransactionDetailSelect')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.TransactionDetailUpdate
(
	@transaction_id int,
	@product_id int,
	@product_name varchar(100),
	@version_id int,
	@version_name varchar(50),
	@product_detail_id int,
	@product_detail_name varchar(100),
	@quantity int,
	@duration int,
	@price float,
	@Original_transaction_detail_id int,
	@transaction_detail_id int
)
AS
	SET NOCOUNT OFF;
UPDATE [un_transaction_details] SET [transaction_id] = @transaction_id, [product_id] = @product_id, [product_name] = @product_name, [version_id] = @version_id, [version_name] = @version_name, [product_detail_id] = @product_detail_id, [product_detail_name] = @product_detail_name, [quantity] = @quantity, [duration] = @duration, [price] = @price WHERE (([transaction_detail_id] = @Original_transaction_detail_id));
	
SELECT transaction_detail_id, transaction_id, product_id, product_name, version_id, version_name, product_detail_id, product_detail_name, quantity, duration, price FROM un_transaction_details WHERE (transaction_detail_id = @transaction_detail_id)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.TransactionDetailUpdate')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[TransactionUpdate]
(
	@gateway_id varchar(50),
	@gw_decision varchar(100),
	@gw_reason_code int,
	@transaction_unid char(36)
)
AS
	SET NOCOUNT OFF;
UPDATE [un_transactions] SET [gateway_id] = @gateway_id, [completed_time] = GETDATE(), 
	[transaction_unid] = @transaction_unid, [gw_decision] = @gw_decision,
	[gw_reason_code] = @gw_reason_code  WHERE (([transaction_unid] = @transaction_unid));
	
SELECT * FROM un_transactions WHERE ([transaction_unid] = @transaction_unid)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.TransactionUpdate')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if not exists (select * from sys.objects where [name] = N'PK_un_transactions' and [type] = 'PK')
ALTER TABLE [dbo].[un_transactions] ADD 
	CONSTRAINT [PK_un_transactions] PRIMARY KEY CLUSTERED 
	(
		[transaction_id]
	) ON [PRIMARY];
GO

IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add primary key dbo.un_transactions.PK_un_transactions')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if not exists (select * from sys.objects where [name] = N'PK_un_transaction_details' and [type] = 'PK')
ALTER TABLE [dbo].[un_transaction_details] ADD 
	CONSTRAINT [PK_un_transaction_details] PRIMARY KEY CLUSTERED 
	(
		[transaction_detail_id]
	) ON [PRIMARY];
GO

IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add primary key dbo.un_transaction_details.PK_un_transaction_details')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if not exists (select * from sys.objects where [name] = N'FK_un_transaction_details_un_product_details' and [type] = 'F')
ALTER TABLE [dbo].[un_transaction_details] ADD 
	CONSTRAINT [FK_un_transaction_details_un_product_details] FOREIGN KEY 
	(
		[product_detail_id]
	)REFERENCES [dbo].[un_product_details](
		[product_detail_id]
	)ON UPDATE NO ACTION ON DELETE NO ACTION 
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add foreign key dbo.un_transaction_details.FK_un_transaction_details_un_product_details')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if not exists (select * from sys.objects where [name] = N'FK_un_transaction_details_un_product_versions' and [type] = 'F')
ALTER TABLE [dbo].[un_transaction_details] ADD 
	CONSTRAINT [FK_un_transaction_details_un_product_versions] FOREIGN KEY 
	(
		[version_id]
	)REFERENCES [dbo].[un_product_versions](
		[version_id]
	)ON UPDATE NO ACTION ON DELETE NO ACTION 
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add foreign key dbo.un_transaction_details.FK_un_transaction_details_un_product_versions')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if not exists (select * from sys.objects where [name] = N'FK_un_transaction_details_un_products' and [type] = 'F')
ALTER TABLE [dbo].[un_transaction_details] ADD 
	CONSTRAINT [FK_un_transaction_details_un_products] FOREIGN KEY 
	(
		[product_id]
	)REFERENCES [dbo].[un_products](
		[product_id]
	)ON UPDATE NO ACTION ON DELETE NO ACTION 
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add foreign key dbo.un_transaction_details.FK_un_transaction_details_un_products')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if not exists (select * from sys.objects where [name] = N'FK_un_transaction_details_un_transactions' and [type] = 'F')
ALTER TABLE [dbo].[un_transaction_details] ADD 
	CONSTRAINT [FK_un_transaction_details_un_transactions] FOREIGN KEY 
	(
		[transaction_id]
	)REFERENCES [dbo].[un_transactions](
		[transaction_id]
	)ON UPDATE NO ACTION ON DELETE NO ACTION 
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add foreign key dbo.un_transaction_details.FK_un_transaction_details_un_transactions')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
if not exists (select * from sys.objects where [name] = N'FK_un_transactions_un_entity_details_core' and [type] = 'F')
ALTER TABLE [dbo].[un_transactions] ADD 
	CONSTRAINT [FK_un_transactions_un_entity_details_core] FOREIGN KEY 
	(
		[user_id]
	)REFERENCES [dbo].[un_entity_details_core](
		[entity_id]
	)ON UPDATE NO ACTION ON DELETE NO ACTION 
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add foreign key dbo.un_transactions.FK_un_transactions_un_entity_details_core')
END
GO
IF EXISTS (Select * from #ErrorLog)
BEGIN
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
END
ELSE
BEGIN
	IF @@TRANCOUNT>0 COMMIT TRANSACTION
END
IF EXISTS (Select * from #ErrorLog)
BEGIN
	Print 'Database synchronization script failed'
	GOTO QuitWithErrors
END
ELSE
BEGIN
	Print 'Database synchronization completed successfully'
END



QuitWithErrors:


