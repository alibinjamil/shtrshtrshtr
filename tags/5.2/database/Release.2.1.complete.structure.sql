/**************************************************************************
-- -Generated by xSQL SDK for Schema Comparison and Synchronization
-- -Date/Time: February 24, 2010 18:54:20

-- -Summary:
    Contains the T-SQL script that makes the database 
    .\SQLEXPRESS.ShoppingTrolleyRelease the same as the database .\SQLEXPRESS.ShoppingTrolley

-- -Action:
    Execute this script on .\SQLEXPRESS.ShoppingTrolleyRelease

-- -SQL Server version: 10.0.1600
**************************************************************************/

BEGIN TRANSACTION
	SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
	SET QUOTED_IDENTIFIER ON
	SET ANSI_NULLS ON
	SET ANSI_PADDING ON
	SET ANSI_WARNINGS ON
	SET ARITHABORT ON
	SET NUMERIC_ROUNDABORT OFF
	SET CONCAT_NULL_YIELDS_NULL ON
	SET XACT_ABORT ON
COMMIT TRANSACTION
GO

IF EXISTS (select * from tempdb..sysobjects where id = OBJECT_ID('tempdb..#ErrorLog')) 
	DROP TABLE #ErrorLog 
CREATE TABLE #ErrorLog 
( pkid [int] IDENTITY(1,1) NOT NULL, errno [int] NOT NULL, errdescr [varchar](100) NULL )
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_wish_list]
	ALTER COLUMN [quantity] [int] NOT NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to alter column dbo.un_wish_list.quantity')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
ALTER TABLE [dbo].[un_wish_list]
	ADD [duration] [int] NOT NULL
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add column dbo.un_wish_list.duration')
END
GO
IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE dbo.WishListDelete
(
	@Original_wish_list_id int
)
AS
	SET NOCOUNT OFF;
DELETE FROM [un_wish_list] WHERE (([wish_list_id] = @Original_wish_list_id))
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.WishListDelete')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[ProductDetailSelectById]
	@product_detail_id int
AS
	SET NOCOUNT ON;
SELECT        un_product_details.*
FROM            un_product_details
WHERE			product_detail_id = @product_detail_id

GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.ProductDetailSelectById')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[ProductVideoSelectById]
	@video_id int
AS
	SET NOCOUNT ON;
SELECT        un_product_videos.*
FROM            un_product_videos
WHERE		video_id = @video_id
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.ProductVideoSelectById')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[WishListInsert]
(
	@user_id int,
	@product_id int,
	@version_id int,
	@product_detail_id int,
	@quantity int,
	@duration int
)
AS
	SET NOCOUNT OFF;
INSERT INTO [un_wish_list] ([user_id], [product_id], [version_id], [product_detail_id], [quantity],[duration]) VALUES (@user_id, @product_id, @version_id, @product_detail_id, @quantity,@duration);
	
SELECT * FROM un_wish_list WHERE (wish_list_id = SCOPE_IDENTITY())
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.WishListInsert')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[WishListSelect]
	@user_id int
AS
	SET NOCOUNT ON;
SELECT        un_wish_list.*
FROM            un_wish_list
WHERE		[user_id] = @user_id
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.WishListSelect')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[WishListUpdate]
(
	@user_id int,
	@product_id int,
	@version_id int,
	@product_detail_id int,
	@quantity int,
	@duration int,
	@Original_wish_list_id int,
	@wish_list_id int
)
AS
	SET NOCOUNT OFF;
UPDATE [un_wish_list] SET [user_id] = @user_id, [product_id] = @product_id, [version_id] = @version_id, [product_detail_id] = @product_detail_id, [quantity] = @quantity ,[duration] = @duration
WHERE (([wish_list_id] = @Original_wish_list_id));
	
SELECT * FROM un_wish_list WHERE (wish_list_id = @wish_list_id)
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.WishListUpdate')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF @@TRANCOUNT=0 BEGIN TRANSACTION
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[ProductVersionSelectById]
	@version_id int
AS
	SET NOCOUNT ON;
SELECT        un_product_versions.*,dbo.GetVersionPrice(product_id,version_id,discount) AS price
FROM            un_product_versions
WHERE			version_id = @version_id
GO
IF @@ERROR<>0 
Begin
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
	INSERT INTO #ErrorLog (errno,errdescr) values(@@ERROR,'Failed to add stored procedure dbo.ProductVersionSelectById')
END
GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

IF EXISTS (Select * from #ErrorLog)
BEGIN
	IF @@TRANCOUNT>0 ROLLBACK TRANSACTION
END
ELSE
BEGIN
	IF @@TRANCOUNT>0 COMMIT TRANSACTION
END
IF EXISTS (Select * from #ErrorLog)
BEGIN
	Print 'Database synchronization script failed'
	GOTO QuitWithErrors
END
ELSE
BEGIN
	Print 'Database synchronization completed successfully'
END



QuitWithErrors:


